{"version":3,"sources":["theme/index.ts","components/molecules/ServerMessenger/index.tsx","hooks/useMessage.tsx","components/atoms/Icon/index.tsx","components/pages/RootPage.tsx","components/molecules/SimpleCard/index.tsx","components/molecules/ContentsBox/index.tsx","components/atoms/Title/index.tsx","components/molecules/TitleBar/index.tsx","components/organisms/TitledContentsBox/index.tsx","components/atoms/DatePicker/index.tsx","redux/Filter/actions.ts","redux/Filter/reducer.ts","redux/Filter/index.ts","hooks/useFilter.tsx","components/organisms/WeeklyFilter/index.tsx","components/atoms/Button/index.tsx","components/atoms/Checkbox/index.tsx","components/atoms/Input/index.tsx","components/molecules/SearchBar/index.tsx","redux/System/actions.ts","redux/System/reducer.ts","redux/System/index.ts","hooks/useSystem.tsx","helper/index.ts","redux/Shop/actions.ts","redux/Shop/reducer.ts","redux/Shop/index.ts","hooks/model/useShop.tsx","redux/Statistics/actions.ts","redux/Statistics/reducer.ts","redux/Statistics/index.ts","components/pages/statistics/WeeklyPage.tsx","hooks/model/useStatistics.tsx","components/pages/statistics/ByDayPage.tsx","components/pages/statistics/ByTablePage.tsx","router.tsx","components/atoms/CssBaseline/index.tsx","components/molecules/MenuList/index.tsx","components/molecules/IconLabeledInput/index.tsx","redux/Auth/actions.ts","redux/Auth/reducer.ts","redux/Auth/index.ts","hooks/model/useAuth.tsx","components/organisms/LoginBox/index.tsx","components/organisms/LogoutBox/index.tsx","components/organisms/SideHeader/index.tsx","components/template/LeftMenuTemplate.tsx","components/molecules/SystemAlert/index.tsx","components/molecules/SystemConfirm/index.tsx","components/atoms/Label/index.tsx","components/molecules/ButtonBox/index.tsx","components/template/PopupTemplate.tsx","components/pages/popup/ShopSelectorPop.tsx","App.tsx","redux/index.ts","reportWebVitals.ts","index.tsx","components/molecules/IconButton/index.tsx","redux/Message/actions.ts","redux/Message/reducer.ts","redux/Message/index.ts"],"names":["primary","light","main","dark","secondary","error","warning","info","success","white","background","default","paper","darkBackground","transparent","fontWeight","thin","ultraLight","regular","medium","semiBold","bold","extraBold","heavy","typography","lightWhite","defaultTheme","palette","disabled","hover","breakPoint","pc","mobile","materialTheme","createMuiTheme","overrides","MuiCssBaseline","html","fontFamily","MuiButton","text","StyledWrap","styled","div","ServerMessenger","useMessage","message","taskingId","runningTime","setMessage","parseRunningTime","useMemo","Math","round","useEffect","customWindow","globalThis","window","io","socket","console","log","process","NODE_ENV","undefined","on","emit","state","data","className","icon","fullWidth","useSelector","dispatch","useDispatch","useCallback","param","MessageStore","actions","StyledIcon","OriginIcon","onClick","theme","Icon","props","color","fontSize","iconColor","iconSize","margin","padding","style","RootPage","MemoGridBox","memo","GridBox","StyledGridBox","SimpleCard","title","children","container","direction","item","StyledContainer","toppadd","conpadd","botpadd","ContentsBox","topPadd","conPadd","botPadd","topChildren","bottomChildren","wrap","StyledHeadLine","h1","h2","h3","h4","h5","h6","Title","headline","Headline","StyledRootGrid","TitleBar","justify","Grid","MemoTitleBar","TitledContentsBox","titleChildren","StyledDatePicker","KeyboardDatePicker","DatePicker","format","variant","invalidDateMessage","maxDateMessage","minDateMessage","roleSaga","setFilterDate","createAction","initialState","filterDate","startDate","moment","subtract","toDate","endDate","Date","saga","reducer","createReducer","action","produce","draft","payload","useFilter","filter","FilterStore","WeeklyFilter","onChange","date","isValid","value","maxDate","minDate","StyledButton","OriginButton","Button","StyledCheckbox","OriginCheckbox","Checkbox","StyledInput","TextField","Input","MemoInput","MemoButton","MemoIcon","SearchBar","placeholder","type","systemSaga","showAlert","showConfirm","hideAlert","hideConfirm","setGlobalPop","setIsLoading","isDisplayAlert","isDisplayConfirm","callback","cancelCallback","globalPop","isLoadging","useSystem","system","SystemStore","setGobalPop","AxiosErrorHandler","response","status","statusText","getRandomColor","letters","split","i","floor","random","fetchGetShop","fetchGetShopRequest","fetchGetShopSuccess","fetchGetShopFailure","setSelectedShop","limit","page","name","axios","get","params","catch","put","takeLatest","items","meta","currentPage","itemCount","totalItems","itemsPerPage","totalPages","selected","useShop","store","Shop","fetchGetWeekly","setPending","fetchGetWeeklyRequest","fetchGetWeeklySuccess","fetchGetWeeklyFailure","Promise","all","results","every","distance","count","colors","datasets","map","weeklyMileage","labels","borderColor","fill","weeklyCount","pending","MemoList","List","MemoListItem","ListItem","MemoCheckbox","GlobalPopupButton","ChartContainer","WeeklyPage","statistics","Statistics","useStatistics","useState","slice","id","localSelected","setLocalSelected","searchVal","setSearchVal","debounceSetSearchVal","debounce","trim","length","ids","e","target","reg","RegExp","key","button","includes","seletedId","onClickItem","classNames","none","match","checked","CircularProgress","size","JSON","parse","stringify","ByDayPage","useHistory","ByTablePage","Router","path","exact","CssBaseline","createGlobalStyle","StyledList","MenuList","location","useLocation","history","to","pathname","ContainerComponent","open","push","handleClick","IconLabeledInput","InputProps","startAdornment","fetchLogin","removeAuth","fetchLoginRequest","fetchLoginSuccess","fetchLoginFailure","logout","logoutSuccess","email","password","post","username","defaults","headers","Authorization","access_token","localStorage","setItem","accessToken","removeItem","logged","getItem","useAuth","auth","Auth","LoginBox","user","setUser","inputUser","label","autoComplete","LogoutBox","IconButton","HeaderWrap","SideHeader","MemoSideHeader","LeftMenuTemplate","StyledModalContents","SystemAlert","textAlign","Modal","SystemConfirm","StyledLabel","OriginInputLabel","Label","StyledBox","MemoIconButton","ButtonBox","confirmCallback","addClickCallback","backClickCallback","deleteClickCallback","cancleCallback","modifyClickCallback","confirmMode","showcase","display","StyledModalBody","CloseWrap","MemoButtonBox","ModalTemplate","onClose","onSubmit","onCancel","MemoScrollbars","Scrollbars","StyleGlobalPop","show","ShopSelector","debounceSetValue","existing","selectedId","PopupTemplate","htmlFor","App","utils","MomentUtils","rootReducer","combineReducers","rootSaga","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","StyledIconButton","iconPlace","startIcon","endIcon","taskingTime"],"mappings":"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","file":"static/js/main.035ab101.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { DefaultTheme } from 'styled-components';\r\nimport { createMuiTheme } from '@material-ui/core';\r\n\r\nexport const gray = {\r\n  light: '#efefef',\r\n  main: '#ededed',\r\n  dark: '#cccccc',\r\n};\r\n\r\nexport const primary = {\r\n  light: '#a6d4fa',\r\n  main: '#00acc1',\r\n  dark: '#648dae',\r\n};\r\n\r\nexport const darkPrimary = {\r\n  light: '#a6d4fa',\r\n  main: '#90caf9',\r\n  dark: '#648dae',\r\n};\r\n\r\nexport const secondary = {\r\n  light: '#f6a5c0',\r\n  main: '#f48fb1',\r\n  dark: '#aa647b',\r\n};\r\n\r\nexport const error = {\r\n  light: '#e57373',\r\n  main: '#f44336',\r\n  dark: '#d32f2f',\r\n};\r\n\r\nexport const warning = {\r\n  light: '#ffb74d',\r\n  main: '#ff9800',\r\n  dark: '#f57c00',\r\n};\r\n\r\nexport const info = {\r\n  light: '#64b5f6',\r\n  main: '#2196f3',\r\n  dark: '#1976d2',\r\n};\r\n\r\nexport const success = {\r\n  light: '#81c784',\r\n  main: '#4caf50',\r\n  dark: '#388e3c',\r\n};\r\n\r\nexport const white = {\r\n  light: '#ccc',\r\n  main: '#eee',\r\n  dark: '#fff',\r\n};\r\n\r\nexport const background = {\r\n  default: '#f6f9fc',\r\n  paper: '#fff',\r\n  dark: 'rgba(0,0,0,0.9)',\r\n};\r\n\r\nexport const darkBackground = {\r\n  default: '#121212',\r\n  paper: '#121212',\r\n  transparent: 'rgba(0,0,0,0.9)',\r\n  light: '#555',\r\n};\r\n\r\nexport const fontWeight = {\r\n  thin: 100,\r\n  ultraLight: 200,\r\n  light: 300,\r\n  regular: 400,\r\n  medium: 500,\r\n  semiBold: 600,\r\n  bold: 700,\r\n  extraBold: 800,\r\n  heavy: 900,\r\n};\r\n\r\nexport const typography = {\r\n  default: '#333',\r\n  light: '#777',\r\n  white: '#ededed',\r\n  lightWhite: '#ccc',\r\n};\r\n\r\nexport const breakPoint = {\r\n  pc: '@media screen and (min-width: 768px)',\r\n  mobile: '@media screen and (max-width: 767px)',\r\n};\r\n\r\nexport const defaultTheme: DefaultTheme = {\r\n  palette: {\r\n    primary,\r\n    secondary,\r\n    error,\r\n    warning,\r\n    info,\r\n    success,\r\n    disabled: '#777777',\r\n    typography: typography.default,\r\n    hover: '#888888',\r\n    white,\r\n  },\r\n  fontWeight,\r\n  breakPoint,\r\n};\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  ...defaultTheme,\r\n  palette: {\r\n    primary,\r\n    secondary,\r\n    error,\r\n    warning,\r\n    info,\r\n    success,\r\n    disabled: '#777777',\r\n    typography: typography.default,\r\n    hover: '#888888',\r\n    white,\r\n  },\r\n};\r\n\r\nexport const materialTheme = createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        html: {\r\n          fontFamily:\r\n            '\"Apple SD Gothic Neo\",\"Helvetica Neue\",\"Noto Sans KR\",\"sans-serif\",\"Dotum\",\"돋움\"',\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      text: {\r\n        fontFamily:\r\n          '\"Apple SD Gothic Neo\",\"Helvetica Neue\",\"Noto Sans KR\",\"sans-serif\",\"Dotum\",\"돋움\"',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport useMessage from '@/hooks/useMessage';\r\nimport IconButton from '@/components/molecules/IconButton';\r\n\r\nimport { typography } from '@/theme';\r\n\r\n// play_circle - waiting\r\n// schedule - running\r\n\r\ntype TaskingInfo = {\r\n  taskingId: string | null;\r\n  taskingTime: string | null;\r\n};\r\n\r\nconst StyledWrap = styled.div`\r\n  width: 100%;\r\n  .MuiButton-root {\r\n    &.running {\r\n      color: #f9f827;\r\n    }\r\n    &.waiting {\r\n      color: #08cc0a;\r\n    }\r\n  }\r\n  .small-text {\r\n    display: block;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    color: ${typography.lightWhite};\r\n  }\r\n`;\r\n\r\nconst ServerMessenger = () => {\r\n  const {\r\n    message: { taskingId, runningTime },\r\n    setMessage,\r\n  } = useMessage();\r\n\r\n  const buttonText = () => {\r\n    if (!taskingId) {\r\n      return '크롤링 대기중';\r\n    }\r\n    return `${taskingId}일자 작업중`;\r\n  };\r\n\r\n  const parseRunningTime = useMemo(\r\n    () => `작업시간 : ${Math.round(runningTime / 60)}분 ${runningTime % 60}초`,\r\n    [runningTime]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const customWindow: any = globalThis.window;\r\n    if (customWindow.io && !customWindow.socket) {\r\n      console.log('socket 삽입');\r\n\r\n      customWindow.socket = customWindow.io(\r\n        process?.env?.NODE_ENV === 'production'\r\n          ? undefined\r\n          : 'http://localhost:8080'\r\n      );\r\n\r\n      customWindow.socket.on('connect', () => {\r\n        customWindow.socket.emit('requestState', {\r\n          message: 'test',\r\n          state: 1,\r\n        });\r\n      });\r\n      customWindow.socket.on('responsetState', (data: TaskingInfo) => {\r\n        setMessage(data);\r\n      });\r\n    }\r\n    return () => {\r\n      console.log('socket 삭제');\r\n      customWindow.socket = null;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledWrap>\r\n      <IconButton\r\n        className={taskingId === null ? 'waiting' : 'running'}\r\n        icon={taskingId === null ? 'play_circle' : 'schedule'}\r\n        fullWidth\r\n      >\r\n        {buttonText()}\r\n      </IconButton>\r\n      {taskingId && runningTime && (\r\n        <span className=\"small-text\">{parseRunningTime}</span>\r\n      )}\r\n    </StyledWrap>\r\n  );\r\n};\r\nexport default ServerMessenger;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useCallback } from 'react';\r\n\r\nimport { RootState } from '@/redux';\r\nimport MessageStore from '@/redux/Message';\r\n\r\nexport default function useMessage() {\r\n  const message = useSelector((state: RootState) => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const setMessage = useCallback(\r\n    (param) => dispatch(MessageStore.actions.setMessage(param)),\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    message,\r\n    setMessage,\r\n  };\r\n}\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport OriginIcon, {\r\n  IconProps as OriginIconProps,\r\n} from '@material-ui/core/Icon';\r\n\r\n// material icons의 목록은\r\n// https://material.io/resources/icons/?icon=image&style=baseline\r\n// 에서 확인 가능\r\nexport type IconProps = Omit<OriginIconProps, 'children'> & {\r\n  icon: string;\r\n  iconColor?: string;\r\n  iconSize?: string;\r\n  margin?: string;\r\n  padding?: string;\r\n};\r\n\r\nconst StyledIcon = styled(OriginIcon)`\r\n  cursor: ${({ onClick }) => (typeof onClick === 'function' ? 'pointer' : '')};\r\n  &:hover {\r\n    color: ${({ theme }) => theme.palette.hover};\r\n  }\r\n`;\r\n\r\nconst Icon = (props: IconProps) => {\r\n  const {\r\n    icon,\r\n    color,\r\n    fontSize,\r\n    iconColor,\r\n    iconSize,\r\n    margin,\r\n    padding,\r\n    className,\r\n    onClick,\r\n  } = props;\r\n\r\n  return (\r\n    <StyledIcon\r\n      color={color}\r\n      fontSize={fontSize}\r\n      style={{ color: iconColor, fontSize: iconSize, margin, padding }}\r\n      className={className}\r\n      onClick={onClick}\r\n    >\r\n      {icon}\r\n    </StyledIcon>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nconst RootPage = () => {\r\n  console.log('Root Page');\r\n  return <div>Root Page</div>;\r\n};\r\nexport default RootPage;\r\n","/* eslint-disable indent */\r\nimport React, { FC, memo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport { background } from '@/theme';\r\n\r\nexport type SimpleCardProps = {\r\n  color?: 'purple' | 'green' | 'orange' | 'mint' | 'red';\r\n  title: string;\r\n  className?: string;\r\n};\r\n\r\nconst MemoGridBox = memo(GridBox);\r\n\r\nconst StyledGridBox = styled(MemoGridBox)<{ color?: string }>`\r\n  position: relative;\r\n  border: 1px solid #efe9e9;\r\n  box-shadow: 0 1px 12px 0 rgba(0, 0, 0, 0.14);\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${background.paper};\r\n  margin-top: 20px;\r\n  border-radius: 6px;\r\n  .title-sec {\r\n    flex: 0 0 auto;\r\n    margin: -20px 10px 0 20px;\r\n    padding: 15px;\r\n    border-radius: 3px;\r\n    letter-spacing: -0.5px;\r\n    background: ${({ color }) => {\r\n      switch (color) {\r\n        case 'purple':\r\n          return 'linear-gradient(60deg, #ab47bc, #8e24aa)';\r\n        case 'green':\r\n          return 'linear-gradient(60deg, #66bb6a, #43a047)';\r\n        case 'orange':\r\n          return 'linear-gradient(60deg, #ffa726, #fb8c00)';\r\n        case 'mint':\r\n          return 'linear-gradient(60deg, #26c6da, #00acc1)';\r\n        case 'red':\r\n          return 'linear-gradient(60deg, #ef5350, #e53935)';\r\n        default:\r\n          return 'linear-gradient(60deg, #ab47bc, #8e24aa)';\r\n      }\r\n    }};\r\n    box-shadow: ${({ color }) => {\r\n      switch (color) {\r\n        case 'purple':\r\n          return '0 4px 20px 0 rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(156, 39, 176, 0.4)';\r\n        case 'green':\r\n          return '0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(76, 175, 80,.4)';\r\n        case 'orange':\r\n          return '0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(255, 152, 0,.4)';\r\n        case 'mint':\r\n          return '0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(0, 172, 193,.4)';\r\n        case 'red':\r\n          return '0 4px 20px 0 rgba(0, 0, 0,.14), 0 7px 10px -5px rgba(244, 67, 54,.4)';\r\n        default:\r\n          return '0 4px 20px 0 rgba(0, 0, 0, 0.14),  0 7px 10px -5px rgba(156, 39, 176, 0.4)';\r\n      }\r\n    }};\r\n\r\n    color: #fff;\r\n  }\r\n  .contents {\r\n    flex: 1 1 0;\r\n    padding: 0.9375rem 20px;\r\n  }\r\n`;\r\n\r\nconst SimpleCard: FC<SimpleCardProps> = (props) => {\r\n  const { color, title, children, className } = props;\r\n\r\n  return (\r\n    <StyledGridBox\r\n      container\r\n      direction=\"column\"\r\n      color={color}\r\n      className={className}\r\n    >\r\n      <MemoGridBox item className=\"title-sec\">\r\n        {title}\r\n      </MemoGridBox>\r\n      <MemoGridBox item className=\"contents\">\r\n        {children}\r\n      </MemoGridBox>\r\n    </StyledGridBox>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;\r\n","import React, { FC, ReactNode, memo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport GridBox from '@/components/atoms/GridBox';\r\n\r\nexport type ContentsBoxProps = {\r\n  topPadd?: string;\r\n  conPadd?: string;\r\n  botPadd?: string;\r\n  topChildren?: ReactNode;\r\n  bottomChildren?: ReactNode;\r\n};\r\n\r\nconst MemoGridBox = memo(GridBox);\r\nconst StyledContainer = styled(MemoGridBox)<{\r\n  toppadd: string;\r\n  conpadd: string;\r\n  botpadd: string;\r\n}>`\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  .top-sec {\r\n    flex: 0 0 auto;\r\n    padding: ${({ toppadd }) => toppadd};\r\n  }\r\n  .contents-sec {\r\n    flex: 1 1 0;\r\n    padding: ${({ conpadd }) => conpadd};\r\n  }\r\n  .bottom-sec {\r\n    flex: 0 0 auto;\r\n    padding: ${({ botpadd }) => botpadd};\r\n    margin-top: auto;\r\n  }\r\n`;\r\n\r\nconst ContentsBox: FC<ContentsBoxProps> = (props) => {\r\n  const {\r\n    children,\r\n    topPadd = '0px',\r\n    conPadd = '0px',\r\n    botPadd = '0px',\r\n    topChildren,\r\n    bottomChildren,\r\n  } = props;\r\n\r\n  return (\r\n    <StyledContainer\r\n      container\r\n      wrap=\"nowrap\"\r\n      toppadd={topPadd}\r\n      conpadd={conPadd}\r\n      botpadd={botPadd}\r\n    >\r\n      <MemoGridBox item className=\"top-sec\">\r\n        {topChildren}\r\n      </MemoGridBox>\r\n      <MemoGridBox item className=\"contents-sec\">\r\n        {children}\r\n      </MemoGridBox>\r\n      {bottomChildren && (\r\n        <MemoGridBox item className=\"bottom-sec\">\r\n          {bottomChildren}\r\n        </MemoGridBox>\r\n      )}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default ContentsBox;\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport type TitleProps = {\r\n  //   onClose(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): null;\r\n  children?: ReactNode;\r\n  color?: string;\r\n  fontSize?: string;\r\n  headline?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\r\n  margin?: string;\r\n  padding?: string;\r\n} & React.HTMLAttributes<HTMLElement>;\r\n\r\nconst StyledHeadLine = {\r\n  h1: styled.h1`\r\n    color: ${({ theme }) => theme.palette.typography};\r\n    padding: 0px;\r\n    margin: 0px;\r\n    line-height: 1.5;\r\n    font-size: 24px;\r\n    font-weight: normal;\r\n    letter-spacing: -0.5px;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.palette.hover};\r\n    }\r\n  `,\r\n  h2: styled.h2`\r\n    color: ${({ theme }) => theme.palette.typography};\r\n    padding: 0px;\r\n    margin: 0px;\r\n    line-height: 1.5;\r\n    font-size: 22px;\r\n    font-weight: normal;\r\n    letter-spacing: -0.5px;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.palette.hover};\r\n    }\r\n  `,\r\n  h3: styled.h3`\r\n    color: ${({ theme }) => theme.palette.typography};\r\n    padding: 0px;\r\n    margin: 0px;\r\n    line-height: 1.5;\r\n    font-size: 20px;\r\n    font-weight: normal;\r\n    letter-spacing: -0.5px;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.palette.hover};\r\n    }\r\n  `,\r\n  h4: styled.h4`\r\n    color: ${({ theme }) => theme.palette.typography};\r\n    padding: 0px;\r\n    margin: 0px;\r\n    line-height: 1.5;\r\n    font-size: 18px;\r\n    font-weight: normal;\r\n    letter-spacing: -0.5px;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.palette.hover};\r\n    }\r\n  `,\r\n  h5: styled.h5`\r\n    color: ${({ theme }) => theme.palette.typography};\r\n    padding: 0px;\r\n    margin: 0px;\r\n    line-height: 1.5;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n    letter-spacing: -0.5px;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.palette.hover};\r\n    }\r\n  `,\r\n  h6: styled.h6`\r\n    color: ${({ theme }) => theme.palette.typography};\r\n    padding: 0px;\r\n    margin: 0px;\r\n    line-height: 1.5;\r\n    font-size: 14px;\r\n    font-weight: normal;\r\n    letter-spacing: -0.5px;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.palette.hover};\r\n    }\r\n  `,\r\n};\r\n\r\nconst Title = (props: TitleProps) => {\r\n  const { children, color, margin, padding, fontSize, headline = 'h1' } = props;\r\n  const Headline = StyledHeadLine[headline];\r\n\r\n  return (\r\n    <>\r\n      <Headline style={{ color, fontSize, margin, padding }} {...props}>\r\n        {children}\r\n      </Headline>\r\n    </>\r\n  );\r\n};\r\nexport default Title;\r\n","import React, { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport Title, { TitleProps } from '@/components/atoms/Title';\r\nimport Icon, { IconProps } from '@/components/atoms/Icon';\r\n\r\nimport { primary } from '@/theme';\r\n\r\nexport type TitleBarProps = {\r\n  children?: ReactNode;\r\n} & TitleProps &\r\n  Omit<IconProps, 'color'>;\r\n\r\nconst StyledRootGrid = styled(GridBox)`\r\n  flex: none;\r\n  .center-grid {\r\n    flex: none;\r\n  }\r\n  .right-grid {\r\n    flex: none;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nconst TitleBar = (props: TitleBarProps) => {\r\n  const {\r\n    color,\r\n    title,\r\n    headline,\r\n    fontSize = '24px',\r\n    icon,\r\n    iconColor = primary.main,\r\n    iconSize = '24px',\r\n    children,\r\n  } = props;\r\n\r\n  return (\r\n    <StyledRootGrid container justify=\"space-between\">\r\n      {icon && (\r\n        <GridBox item>\r\n          <Icon\r\n            icon={icon}\r\n            iconColor={iconColor}\r\n            iconSize={iconSize}\r\n            margin=\"6px 0 0 5px\"\r\n          />\r\n        </GridBox>\r\n      )}\r\n      <GridBox item className=\"center-grid\">\r\n        <Title\r\n          headline={headline}\r\n          color={color}\r\n          fontSize={fontSize}\r\n          margin=\"0 0 0 5px\"\r\n        >\r\n          {title}\r\n        </Title>\r\n      </GridBox>\r\n      <GridBox item className=\"right-grid\">\r\n        {children}\r\n      </GridBox>\r\n    </StyledRootGrid>\r\n  );\r\n};\r\nexport default TitleBar;\r\n","/* eslint-disable react/require-default-props */\r\nimport React, { FC, ReactNode, memo } from 'react';\r\n\r\nimport ContentsBox, {\r\n  ContentsBoxProps,\r\n} from '@/components/molecules/ContentsBox';\r\nimport TitleBar, { TitleBarProps } from '@/components/molecules/TitleBar';\r\n\r\nexport type TitledContentsBoxProps = TitleBarProps &\r\n  Omit<ContentsBoxProps, 'topChildren'> & {\r\n    titleChildren: ReactNode;\r\n  };\r\n\r\nconst MemoTitleBar = memo(TitleBar);\r\n\r\nconst TitledContentsBox: FC<TitledContentsBoxProps> = (props) => {\r\n  const {\r\n    title,\r\n    icon = 'bar_chart',\r\n    children,\r\n    topPadd = '0px',\r\n    conPadd = '0px',\r\n    botPadd = '0px',\r\n    titleChildren,\r\n    bottomChildren,\r\n  } = props;\r\n\r\n  return (\r\n    <ContentsBox\r\n      topPadd={topPadd}\r\n      conPadd={conPadd}\r\n      botPadd={botPadd}\r\n      topChildren={\r\n        <MemoTitleBar title={title} icon={icon} headline=\"h1\">\r\n          {titleChildren}\r\n        </MemoTitleBar>\r\n      }\r\n      bottomChildren={bottomChildren}\r\n    >\r\n      {children}\r\n    </ContentsBox>\r\n  );\r\n};\r\n\r\nexport default TitledContentsBox;\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardDatePickerProps,\r\n} from '@material-ui/pickers';\r\n\r\nexport type { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nexport type DatePickerProps = KeyboardDatePickerProps;\r\n\r\nconst StyledDatePicker = styled(KeyboardDatePicker)<DatePickerProps>`\r\n  .MuiInputBase-input {\r\n    padding: 4px 0 5px;\r\n    width: 100px;\r\n  }\r\n  .MuiIconButton-root {\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nconst DatePicker = (props: DatePickerProps) => {\r\n  const {\r\n    format = 'yyyy/MM/DD',\r\n    variant,\r\n    invalidDateMessage = '날짜 형식이 맞지 않습니다',\r\n    maxDateMessage = '최대 날짜보다 이전 날짜를 선택하세요',\r\n    minDateMessage = '최소 날짜보다 이후 날짜를 선택하세요',\r\n  } = props;\r\n\r\n  return (\r\n    <StyledDatePicker\r\n      {...props}\r\n      format={format}\r\n      variant={variant}\r\n      invalidDateMessage={invalidDateMessage}\r\n      maxDateMessage={maxDateMessage}\r\n      minDateMessage={minDateMessage}\r\n    />\r\n  );\r\n};\r\nexport default DatePicker;\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable no-unused-expressions */\r\nimport { createAction, ActionType } from 'typesafe-actions';\r\nimport { State } from './reducer';\r\n\r\nconst SET_FILTER_DATE = 'date/SET_FILTER_DATE';\r\n\r\nconst setFilterDate = createAction(SET_FILTER_DATE)<State['filterDate']>();\r\n\r\nexport const actions = {\r\n  setFilterDate,\r\n};\r\n\r\nexport type ActionsType = ActionType<typeof actions>;\r\n\r\nexport default function* roleSaga() {\r\n  yield console.log('date saga');\r\n}\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable func-names */\r\nimport produce, { Draft } from 'immer';\r\nimport moment from 'moment';\r\nimport { createReducer } from 'typesafe-actions';\r\nimport { ActionsType } from './actions';\r\n\r\nexport type State = {\r\n  filterDate: {\r\n    startDate: Date;\r\n    endDate: Date;\r\n  };\r\n};\r\n\r\nexport const initialState: State = {\r\n  filterDate: {\r\n    startDate: moment().subtract(3, 'months').toDate(),\r\n    endDate: new Date(),\r\n  },\r\n};\r\n\r\nexport default createReducer<State, ActionsType>(initialState, {\r\n  'date/SET_FILTER_DATE': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.filterDate = action.payload;\r\n    });\r\n  },\r\n});\r\n","import saga, { actions } from './actions';\r\nimport reducer from './reducer';\r\n\r\nexport default {\r\n  saga,\r\n  reducer,\r\n  actions,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useCallback } from 'react';\r\n\r\nimport { RootState } from '@/redux';\r\nimport FilterStore from '@/redux/Filter';\r\nimport { State } from '@/redux/Filter/reducer';\r\n\r\nexport default function useFilter() {\r\n  const filter = useSelector((state: RootState) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const setFilterDate = useCallback(\r\n    (param: State['filterDate']) =>\r\n      dispatch(FilterStore.actions.setFilterDate(param)),\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    filter,\r\n    setFilterDate,\r\n  };\r\n}\r\n","/* eslint-disable react/require-default-props */\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\n\r\nimport DatePicker, {\r\n  MaterialUiPickersDate,\r\n} from '@/components/atoms/DatePicker';\r\nimport useFilter from '@/hooks/useFilter';\r\n\r\nconst StyledWrap = styled.div`\r\n  .title {\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    padding: 6px 12px;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst WeeklyFilter = () => {\r\n  const {\r\n    filter: { filterDate },\r\n    setFilterDate,\r\n  } = useFilter();\r\n  const { startDate, endDate } = filterDate;\r\n\r\n  const onChangeStart = (date: MaterialUiPickersDate) => {\r\n    if (date?.isValid()) {\r\n      setFilterDate({\r\n        startDate: date.toDate(),\r\n        endDate,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onChangeEnd = (date: MaterialUiPickersDate) => {\r\n    if (date?.isValid()) {\r\n      setFilterDate({\r\n        startDate,\r\n        endDate: date.toDate(),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledWrap>\r\n      <span className=\"title\">시작일 :</span>\r\n      <DatePicker\r\n        onChange={onChangeStart}\r\n        value={startDate}\r\n        maxDate={endDate}\r\n      />\r\n      <span className=\"title\">종료일 :</span>\r\n      <DatePicker onChange={onChangeEnd} value={endDate} minDate={startDate} />\r\n    </StyledWrap>\r\n  );\r\n};\r\nexport default WeeklyFilter;\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport OriginButton, {\r\n  ButtonProps as OriginButtonProps,\r\n} from '@material-ui/core/Button';\r\n\r\nexport type ButtonProps = Omit<OriginButtonProps, 'startIcon' | 'endIcon'>;\r\nconst StyledButton = styled(OriginButton)`\r\n  color: ${({ theme }) => theme.palette.typography};\r\n  min-width: 40px !important;\r\n`;\r\n\r\nconst Button = (props: ButtonProps) => {\r\n  const { children } = props;\r\n  return <StyledButton {...props}>{children}</StyledButton>;\r\n};\r\n\r\nexport default Button;\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport OriginCheckbox, { CheckboxProps } from '@material-ui/core/Checkbox';\r\n\r\nexport type { CheckboxProps };\r\n\r\nconst StyledCheckbox = styled(OriginCheckbox)<CheckboxProps>`\r\n  color: ${({ theme }) => theme.palette.typography};\r\n  &:hover {\r\n    color: ${({ theme }) => theme.palette.hover};\r\n  }\r\n`;\r\n\r\nconst Checkbox = (props: CheckboxProps) => {\r\n  const { color = 'primary' } = props;\r\n\r\n  return <StyledCheckbox {...props} color={color} />;\r\n};\r\n\r\nexport default Checkbox;\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport TextField, {\r\n  TextFieldProps as OriginTextFieldProps,\r\n} from '@material-ui/core/TextField';\r\n\r\nexport type InputProps = Omit<\r\n  OriginTextFieldProps,\r\n  'multiline' | 'rows' | 'rowsMax'\r\n>;\r\n\r\nconst StyledInput = styled(TextField)`\r\n  /* box-shadow: 0 4px 6px rgba(10, 10, 12, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08); */\r\n`;\r\n\r\nconst Input = (props: InputProps) => <StyledInput {...props} />;\r\n\r\nexport default Input;\r\n","import React, { FC, memo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Input, { InputProps } from '@/components/atoms/Input';\r\nimport Icon from '@/components/atoms/Icon';\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport Button from '@/components/atoms/Button';\r\n\r\nimport { primary } from '@/theme';\r\n\r\nexport type SearchBarProps = Omit<InputProps, 'type'> & {\r\n  value?: string;\r\n};\r\n\r\nconst MemoInput = memo(Input);\r\nconst MemoButton = memo(Button);\r\nconst MemoIcon = memo(Icon);\r\nconst MemoGridBox = memo(GridBox);\r\n\r\nconst StyledContainer = styled.div`\r\n  display: block;\r\n  border: 1px solid ${primary.main};\r\n  padding: 5px 10px;\r\n  box-shadow: 0 5px 10px -12px rgba(0, 0, 0, 0.42),\r\n    0 4px 5px 0px rgba(0, 0, 0, 0.12), 0 5px 10px -5px rgba(0, 0, 0, 0.2);\r\n  .input-sec {\r\n    flex: 1 1 auto;\r\n    padding: 0 5px;\r\n    .MuiInput-underline:before,\r\n    .MuiInput-underline:after {\r\n      display: none;\r\n    }\r\n  }\r\n  .btn-sec {\r\n    flex: 0 1 auto;\r\n  }\r\n`;\r\n\r\nconst SearchBar: FC<SearchBarProps> = (props) => {\r\n  const { value, children, placeholder = '검색어를 입력하세요' } = props;\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <MemoGridBox container>\r\n        <MemoGridBox item className=\"input-sec\">\r\n          <MemoInput\r\n            {...props}\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            value={value}\r\n            fullWidth\r\n          >\r\n            {children}\r\n          </MemoInput>\r\n        </MemoGridBox>\r\n        <MemoGridBox item className=\"btn-sec\">\r\n          <MemoButton type=\"submit\" variant=\"text\">\r\n            <MemoIcon icon=\"search\" />\r\n          </MemoButton>\r\n        </MemoGridBox>\r\n      </MemoGridBox>\r\n    </StyledContainer>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","/* eslint-disable func-call-spacing */\r\n/* eslint-disable no-spaced-func */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { createAction, ActionType } from 'typesafe-actions';\r\n\r\nconst SHOW_ALERT = 'system/SHOW_ALERT';\r\nconst SHOW_CONFIRM = 'system/SHOW_CONFIRM';\r\nconst HIDE_ALERT = 'system/HIDE_ALERT';\r\nconst HIDE_CONFIRM = 'system/HIDE_CONFIRM';\r\nconst SET_GLOBAL_POP = 'system/SET_GLOBAL_POP';\r\nconst SET_IS_LOADING = 'system/SET_IS_LOADING';\r\n\r\nconst showAlert = createAction(SHOW_ALERT)<{\r\n  message: string;\r\n  callback?: (data?: any) => any;\r\n}>();\r\n\r\nconst showConfirm = createAction(SHOW_CONFIRM)<{\r\n  message: string;\r\n  callback?: (data: any) => any;\r\n  cancelCallback?: (data?: any) => any;\r\n}>();\r\n\r\nconst hideAlert = createAction(HIDE_ALERT)();\r\nconst hideConfirm = createAction(HIDE_CONFIRM)();\r\nconst setGlobalPop = createAction(SET_GLOBAL_POP)<boolean>();\r\nconst setIsLoading = createAction(SET_IS_LOADING)<boolean>();\r\n\r\nexport const actions = {\r\n  showAlert,\r\n  showConfirm,\r\n  hideAlert,\r\n  hideConfirm,\r\n  setGlobalPop,\r\n  setIsLoading,\r\n};\r\n\r\nexport type ActionsType = ActionType<typeof actions>;\r\n\r\nexport default function* systemSaga() {}\r\n","/* eslint-disable operator-linebreak */\r\n/* eslint-disable func-names */\r\n/* eslint-disable no-param-reassign */\r\nimport produce, { Draft } from 'immer';\r\nimport { createReducer } from 'typesafe-actions';\r\n\r\nimport { ActionsType } from './actions';\r\n\r\nexport type State = {\r\n  message?: string;\r\n  isDisplayAlert?: boolean;\r\n  isDisplayConfirm?: boolean;\r\n  callback?: (data?: any) => any;\r\n  cancelCallback?: (data?: any) => any;\r\n  globalPop: boolean;\r\n  isLoadging: boolean;\r\n};\r\n\r\nexport const initialState: State = {\r\n  message: undefined,\r\n  isDisplayAlert: undefined,\r\n  isDisplayConfirm: undefined,\r\n  callback: undefined,\r\n  cancelCallback: undefined,\r\n  globalPop: false,\r\n  isLoadging: false,\r\n};\r\n\r\nexport default createReducer<State, ActionsType>(initialState, {\r\n  'system/SHOW_ALERT': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      const { message, callback } = action.payload;\r\n      draft.isDisplayAlert = true;\r\n      draft.message = message;\r\n      draft.callback = callback;\r\n    });\r\n  },\r\n  'system/SHOW_CONFIRM': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      const { message, callback, cancelCallback } = action.payload;\r\n      draft.isDisplayConfirm = true;\r\n      draft.message = message;\r\n      draft.callback = typeof callback === 'function' ? callback : undefined;\r\n      draft.cancelCallback = cancelCallback;\r\n    });\r\n  },\r\n  'system/HIDE_ALERT': function (state) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.isDisplayAlert = false;\r\n    });\r\n  },\r\n  'system/HIDE_CONFIRM': function (state) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.isDisplayConfirm = false;\r\n    });\r\n  },\r\n  'system/SET_GLOBAL_POP': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.globalPop = action.payload;\r\n    });\r\n  },\r\n  'system/SET_IS_LOADING': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.isLoadging = action.payload;\r\n    });\r\n  },\r\n});\r\n","import saga, { actions } from './actions';\r\nimport reducer from './reducer';\r\n\r\nexport default {\r\n  saga,\r\n  reducer,\r\n  actions,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useCallback } from 'react';\r\n\r\nimport { RootState } from '@/redux';\r\nimport SystemStore from '@/redux/System';\r\n\r\nexport default function useSystem() {\r\n  const system = useSelector((state: RootState) => state.system);\r\n  const dispatch = useDispatch();\r\n\r\n  const showAlert = useCallback(\r\n    ({\r\n      message,\r\n      callback,\r\n    }: {\r\n      message: string;\r\n      callback?: (data?: any) => any;\r\n    }) => dispatch(SystemStore.actions.showAlert({ message, callback })),\r\n    [dispatch]\r\n  );\r\n\r\n  const showConfirm = useCallback(\r\n    ({\r\n      message,\r\n      callback,\r\n      cancelCallback,\r\n    }: {\r\n      message: string;\r\n      callback?: (data?: any) => any;\r\n      cancelCallback?: (data?: any) => any;\r\n    }) =>\r\n      dispatch(\r\n        SystemStore.actions.showConfirm({ message, callback, cancelCallback })\r\n      ),\r\n    [dispatch]\r\n  );\r\n  const hideAlert = useCallback(\r\n    () => dispatch(SystemStore.actions.hideAlert()),\r\n    [dispatch]\r\n  );\r\n\r\n  const hideConfirm = useCallback(\r\n    () => dispatch(SystemStore.actions.hideConfirm()),\r\n    [dispatch]\r\n  );\r\n\r\n  const setGobalPop = useCallback(\r\n    (param: boolean) => dispatch(SystemStore.actions.setGlobalPop(param)),\r\n    [dispatch]\r\n  );\r\n\r\n  const setIsLoading = useCallback(\r\n    (param: boolean) => dispatch(SystemStore.actions.setIsLoading(param)),\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    system,\r\n    showAlert,\r\n    showConfirm,\r\n    hideAlert,\r\n    hideConfirm,\r\n    setGobalPop,\r\n    setIsLoading,\r\n  };\r\n}\r\n","import { AxiosError } from 'axios';\r\n\r\nexport const AxiosErrorHandler = (error: AxiosError) => {\r\n  const { response } = error;\r\n\r\n  if (response) {\r\n    const { status, statusText } = response;\r\n    return {\r\n      status,\r\n      statusText,\r\n    };\r\n  }\r\n  return {\r\n    status: 500,\r\n    statusText: '서버에러 발생',\r\n  };\r\n};\r\n\r\nexport const getRandomColor = () => {\r\n  const letters = '0123456789ABCDEF'.split('');\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i += 1) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable no-unused-expressions */\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { createAction, ActionType } from 'typesafe-actions';\r\nimport { put, takeLatest } from 'redux-saga/effects';\r\nimport { Pagination } from 'nestjs-typeorm-paginate';\r\n\r\nimport { AxiosErrorHandler } from '@/helper';\r\nimport { Shop } from './reducer';\r\n\r\nconst FETCH_GET_SHOP_REQUEST = 'auth/FETCH_GET_SHOP_REQUEST';\r\nconst FETCH_GET_SHOP_SUCCESS = 'auth/FETCH_GET_SHOP_SUCCESS';\r\nconst FETCH_GET_SHOP_FAILURE = 'auth/FETCH_GET_SHOP_FAILURE';\r\n\r\nconst SET_SELECTED_SHOP = 'auth/SET_SELECTED_SHOP';\r\n\r\nconst fetchGetShopRequest = createAction(FETCH_GET_SHOP_REQUEST)<\r\n  Partial<Shop> & pagenationParam\r\n>();\r\nconst fetchGetShopSuccess = createAction(FETCH_GET_SHOP_SUCCESS)<\r\n  Pagination<Shop>\r\n>();\r\nconst fetchGetShopFailure = createAction(FETCH_GET_SHOP_FAILURE)();\r\nconst setSelectedShop = createAction(SET_SELECTED_SHOP)<Shop[]>();\r\n\r\nexport const actions = {\r\n  fetchGetShopRequest,\r\n  fetchGetShopSuccess,\r\n  fetchGetShopFailure,\r\n  setSelectedShop,\r\n};\r\n\r\nexport type ActionsType = ActionType<typeof actions>;\r\nfunction* fetchGetShop(action: ActionType<typeof fetchGetShopRequest>) {\r\n  const { limit, page, name } = action.payload;\r\n\r\n  const { data, status }: AxiosResponse<Pagination<Shop>> = yield axios\r\n    .get<Pagination<Shop>>(`/api/pudu/shop`, {\r\n      params: {\r\n        limit,\r\n        page,\r\n        name,\r\n      },\r\n    })\r\n    .catch(AxiosErrorHandler);\r\n\r\n  if (status === 200) {\r\n    yield put(fetchGetShopSuccess(data));\r\n  } else {\r\n    yield put(fetchGetShopFailure());\r\n  }\r\n}\r\nexport default function* roleSaga() {\r\n  yield takeLatest(fetchGetShopRequest, fetchGetShop);\r\n}\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable func-names */\r\nimport produce, { Draft } from 'immer';\r\nimport { createReducer } from 'typesafe-actions';\r\nimport { IPaginationMeta } from 'nestjs-typeorm-paginate';\r\n\r\nimport { ActionsType } from './actions';\r\n\r\nexport type Shop = {\r\n  id: number;\r\n  create_time: string;\r\n  cuisine: string;\r\n  grade: string;\r\n  name: string;\r\n  operation_status: number;\r\n  robotCount: number;\r\n  robot_use_type: string;\r\n  shop_type: string;\r\n  sn: string;\r\n  sysSn: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n};\r\n\r\nexport type State = {\r\n  items: Shop[];\r\n  meta: IPaginationMeta;\r\n  selected: Shop[];\r\n};\r\n\r\nexport const initialState: State = {\r\n  items: [],\r\n  meta: {\r\n    currentPage: 0,\r\n    itemCount: 0,\r\n    totalItems: 0,\r\n    itemsPerPage: 0,\r\n    totalPages: 0,\r\n  },\r\n  selected: [],\r\n};\r\n\r\nexport default createReducer<State, ActionsType>(initialState, {\r\n  'auth/FETCH_GET_SHOP_SUCCESS': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      const { items, meta } = action.payload;\r\n      draft.items = items;\r\n      draft.meta = meta;\r\n    });\r\n  },\r\n  'auth/SET_SELECTED_SHOP': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.selected = action.payload;\r\n    });\r\n  },\r\n});\r\n","import saga, { actions } from './actions';\r\nimport reducer from './reducer';\r\n\r\nexport default {\r\n  saga,\r\n  reducer,\r\n  actions,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useCallback } from 'react';\r\n\r\nimport { RootState } from '@/redux';\r\nimport Shop from '@/redux/Shop';\r\nimport { Shop as ShopType } from '@/redux/Shop/reducer';\r\n\r\nexport default function useShop() {\r\n  const store = useSelector((state: RootState) => state.store);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchGetShop = useCallback(\r\n    (param: Partial<ShopType> & pagenationParam) =>\r\n      dispatch(Shop.actions.fetchGetShopRequest(param)),\r\n    [dispatch]\r\n  );\r\n\r\n  const setSelectedShop = useCallback(\r\n    (param: ShopType[]) => dispatch(Shop.actions.setSelectedShop(param)),\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    store,\r\n    fetchGetShop,\r\n    setSelectedShop,\r\n  };\r\n}\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable no-unused-expressions */\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { createAction, ActionType } from 'typesafe-actions';\r\nimport { put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { AxiosErrorHandler, getRandomColor } from '@/helper';\r\nimport { State, WeeklyParam } from './reducer';\r\n\r\nconst SET_PENDING = 'statistics/SET_PENDING';\r\n\r\nconst FETCH_GET_WEEKLY_REQUEST = 'statistics/FETCH_GET_WEEKLY_REQUEST';\r\nconst FETCH_GET_WEEKLY_SUCCESS = 'statistics/FETCH_GET_WEEKLY_SUCCESS';\r\nconst FETCH_GET_WEEKLY_FAILURE = 'statistics/FETCH_GET_WEEKLY_FAILURE';\r\nconst setPending = createAction(SET_PENDING)<boolean>();\r\nconst fetchGetWeeklyRequest = createAction(\r\n  FETCH_GET_WEEKLY_REQUEST\r\n)<WeeklyParam>();\r\nconst fetchGetWeeklySuccess = createAction(FETCH_GET_WEEKLY_SUCCESS)<\r\n  Pick<State, 'weeklyMileage' | 'weeklyCount'>\r\n>();\r\nconst fetchGetWeeklyFailure = createAction(FETCH_GET_WEEKLY_FAILURE)();\r\n\r\nexport const actions = {\r\n  setPending,\r\n  fetchGetWeeklyRequest,\r\n  fetchGetWeeklySuccess,\r\n  fetchGetWeeklyFailure,\r\n};\r\n\r\nexport type ActionsType = ActionType<typeof actions>;\r\nfunction* fetchGetWeekly(action: ActionType<typeof fetchGetWeeklyRequest>) {\r\n  yield put(setPending(true));\r\n\r\n  const results: AxiosResponse<State['weeklyMileage']>[] = yield Promise.all([\r\n    axios\r\n      .get<State['weeklyMileage']>(\r\n        `/api/pudu/delivery/statistics/weekly/distance`,\r\n        {\r\n          params: action.payload,\r\n        }\r\n      )\r\n      .catch(AxiosErrorHandler),\r\n    axios\r\n      .get<State['weeklyMileage']>(\r\n        `/api/pudu/delivery/statistics/weekly/count`,\r\n        {\r\n          params: action.payload,\r\n        }\r\n      )\r\n      .catch(AxiosErrorHandler),\r\n  ]);\r\n\r\n  if (results.every(({ status }) => status === 200)) {\r\n    const [distance, count] = results;\r\n    const colors = distance.data.datasets.map(() => getRandomColor());\r\n\r\n    const weeklyMileage = {\r\n      labels: distance.data.labels,\r\n      datasets: distance.data.datasets.map((data, i) => ({\r\n        ...data,\r\n        borderColor: colors[i],\r\n        fill: false,\r\n      })),\r\n    };\r\n\r\n    const weeklyCount = {\r\n      labels: count.data.labels,\r\n      datasets: count.data.datasets.map((data, i) => ({\r\n        ...data,\r\n        borderColor: colors[i],\r\n        fill: false,\r\n      })),\r\n    };\r\n\r\n    yield put(\r\n      fetchGetWeeklySuccess({\r\n        weeklyMileage,\r\n        weeklyCount,\r\n      })\r\n    );\r\n  } else {\r\n    yield put(fetchGetWeeklyFailure());\r\n  }\r\n  yield put(setPending(false));\r\n}\r\nexport default function* roleSaga() {\r\n  yield takeLatest(fetchGetWeeklyRequest, fetchGetWeekly);\r\n}\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable func-names */\r\nimport produce, { Draft } from 'immer';\r\nimport { createReducer } from 'typesafe-actions';\r\n\r\nimport { ActionsType } from './actions';\r\n\r\nexport type WeeklyParam = {\r\n  startDate: Date;\r\n  endDate: Date;\r\n  ids: number[];\r\n  type?: 'distance' | 'count';\r\n};\r\n\r\nexport type Datasets = {\r\n  label: string;\r\n  fill: boolean;\r\n  lineTension: number;\r\n  borderColor: string;\r\n  borderCapStyle: string;\r\n  borderDash: string[];\r\n  borderDashOffset: number;\r\n  borderJoinStyle: number;\r\n  pointBorderColor: string;\r\n  pointBackgroundColor: string;\r\n  pointBorderWidth: number;\r\n  pointHoverRadius: number;\r\n  pointHoverBackgroundColor: string;\r\n  pointHoverBorderColor: string;\r\n  pointHoverBorderWidth: number;\r\n  pointRadius: number;\r\n  pointHitRadius: number;\r\n  data: number[];\r\n};\r\n\r\nexport type Statistics = {\r\n  labels: string[];\r\n  datasets: Datasets[];\r\n};\r\n\r\nexport type State = {\r\n  pending: boolean;\r\n  weeklyMileage: Statistics;\r\n  weeklyCount: Statistics;\r\n};\r\n\r\nexport const initialState: State = {\r\n  pending: false,\r\n  weeklyMileage: {\r\n    labels: [],\r\n    datasets: [],\r\n  },\r\n  weeklyCount: {\r\n    labels: [],\r\n    datasets: [],\r\n  },\r\n};\r\n\r\nexport default createReducer<State, ActionsType>(initialState, {\r\n  'statistics/SET_PENDING': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.pending = action.payload;\r\n    });\r\n  },\r\n  'statistics/FETCH_GET_WEEKLY_SUCCESS': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.weeklyMileage = action.payload.weeklyMileage;\r\n      draft.weeklyCount = action.payload.weeklyCount;\r\n    });\r\n  },\r\n});\r\n","import saga, { actions } from './actions';\r\nimport reducer from './reducer';\r\n\r\nexport default {\r\n  saga,\r\n  reducer,\r\n  actions,\r\n};\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { debounce } from 'throttle-debounce';\r\nimport classNames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport SimpleCard from '@/components/molecules/SimpleCard';\r\nimport ContentsBox from '@/components/molecules/ContentsBox';\r\nimport TitledContentsBox from '@/components/organisms/TitledContentsBox';\r\nimport WeeklyFilter from '@/components/organisms/WeeklyFilter';\r\n\r\nimport Button from '@/components/atoms/Button';\r\nimport Icon from '@/components/atoms/Icon';\r\nimport List from '@/components/atoms/List';\r\nimport ListItem from '@/components/atoms/ListItem';\r\nimport Checkbox from '@/components/atoms/Checkbox';\r\nimport SearchBar from '@/components/molecules/SearchBar';\r\n\r\nimport useFilter from '@/hooks/useFilter';\r\nimport useSystem from '@/hooks/useSystem';\r\nimport useShop from '@/hooks/model/useShop';\r\nimport useStatistics from '@/hooks/model/useStatistics';\r\n\r\nconst MemoList = memo(List);\r\nconst MemoListItem = memo(ListItem);\r\nconst MemoCheckbox = memo(Checkbox);\r\nconst MemoGridBox = memo(GridBox);\r\n\r\nconst GlobalPopupButton = () => {\r\n  const { setGobalPop } = useSystem();\r\n\r\n  return (\r\n    <Button type=\"button\" onClick={() => setGobalPop(true)}>\r\n      <Icon icon=\"store\" color=\"primary\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst ChartContainer = styled(MemoGridBox)`\r\n  height: 100%;\r\n  .content-item {\r\n    padding: 20px;\r\n    .loading-background {\r\n      background-color: rgba(0, 0, 0, 0.3);\r\n      position: absolute;\r\n      top: 28px;\r\n      left: 20px;\r\n      right: 10px;\r\n      bottom: 16px;\r\n      .spinner {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n      }\r\n    }\r\n    &.store-list {\r\n      flex: 0 0 300px;\r\n      .store-list-content {\r\n        height: 100%;\r\n        .store-search-sec {\r\n          flex: 0 0 auto;\r\n        }\r\n        .store-list-sec {\r\n          margin-top: 10px;\r\n          flex: 1 1 0;\r\n          .list-item {\r\n            padding: 0;\r\n          }\r\n          .none {\r\n            display: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    &.chart-list {\r\n      flex: 1 1 0;\r\n      .serving-mileage {\r\n        height: auto;\r\n      }\r\n      .serving-count {\r\n        margin-top: 50px;\r\n        height: auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst WeeklyPage = () => {\r\n  const { showAlert } = useSystem();\r\n  const {\r\n    store: { selected },\r\n  } = useShop();\r\n  const {\r\n    filter: { filterDate },\r\n  } = useFilter();\r\n  const {\r\n    statistics: { weeklyMileage, weeklyCount, pending },\r\n    fetchGetWeekly,\r\n  } = useStatistics();\r\n\r\n  const [localSelected, setLocalSelected] = useState<number[]>(() =>\r\n    selected.slice(0, 5).map(({ id }) => id)\r\n  );\r\n  const [searchVal, setSearchVal] = useState<string>('');\r\n  const max = 30;\r\n\r\n  const onClickItem = (id: number) => {\r\n    if (!localSelected.includes(id)) {\r\n      if (localSelected.length >= max) {\r\n        showAlert({\r\n          message: `한번에 ${max}개의 상점만 보여집니다`,\r\n        });\r\n      } else {\r\n        setLocalSelected([...localSelected, id]);\r\n      }\r\n    } else {\r\n      setLocalSelected(localSelected.filter((seletedId) => seletedId !== id));\r\n    }\r\n  };\r\n\r\n  const onChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    debounceSetSearchVal(e.target.value);\r\n  };\r\n\r\n  const debounceSetSearchVal = debounce(300, false, (value: string) => {\r\n    setSearchVal(value.trim());\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLocalSelected(() => selected.slice(0, 5).map(({ id }) => id));\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    if (localSelected.length) {\r\n      fetchGetWeekly({\r\n        startDate: filterDate.startDate,\r\n        endDate: filterDate.endDate,\r\n        ids: localSelected,\r\n      });\r\n    }\r\n  }, [filterDate, localSelected]);\r\n\r\n  return (\r\n    <TitledContentsBox\r\n      title=\"주차별 서빙 통계\"\r\n      icon=\"bar_chart\"\r\n      topPadd=\"10px\"\r\n      conPadd=\"10px\"\r\n      titleChildren={<GlobalPopupButton />}\r\n    >\r\n      <ContentsBox\r\n        topPadd=\"10px\"\r\n        conPadd=\"10px\"\r\n        botPadd=\"10px\"\r\n        topChildren={<WeeklyFilter />}\r\n      >\r\n        <ChartContainer\r\n          container\r\n          wrap=\"nowrap\"\r\n          direction=\"row\"\r\n          className=\"chart-container\"\r\n        >\r\n          <MemoGridBox item className=\"content-item store-list\">\r\n            <MemoGridBox\r\n              container\r\n              direction=\"column\"\r\n              className=\"store-list-content\"\r\n            >\r\n              <MemoGridBox item className=\"store-search-sec\">\r\n                <SearchBar onChange={onChange} placeholder=\"상점검색\" />\r\n              </MemoGridBox>\r\n              <MemoGridBox item className=\"store-list-sec\">\r\n                <Scrollbars>\r\n                  <MemoList>\r\n                    {selected.map((item) => {\r\n                      const { id, name } = item;\r\n                      const reg = new RegExp(searchVal, 'igm');\r\n\r\n                      return (\r\n                        <MemoListItem\r\n                          key={id}\r\n                          button\r\n                          onClick={() => onClickItem(id)}\r\n                          className={classNames('list-item', {\r\n                            none: !name.trim().match(reg),\r\n                          })}\r\n                        >\r\n                          <MemoCheckbox checked={localSelected.includes(id)} />\r\n                          {name}\r\n                        </MemoListItem>\r\n                      );\r\n                    })}\r\n                  </MemoList>\r\n                </Scrollbars>\r\n              </MemoGridBox>\r\n            </MemoGridBox>\r\n          </MemoGridBox>\r\n          <MemoGridBox item className=\"content-item chart-list\">\r\n            <Scrollbars>\r\n              <SimpleCard\r\n                title=\"주차별 서빙 거리(m)\"\r\n                color=\"green\"\r\n                className=\"serving-mileage\"\r\n              >\r\n                {pending && (\r\n                  <div className=\"loading-background\">\r\n                    <div className=\"spinner\">\r\n                      <CircularProgress size={100} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <Line data={JSON.parse(JSON.stringify(weeklyMileage))} />\r\n              </SimpleCard>\r\n              <SimpleCard\r\n                title=\"주차별 서빙 횟수\"\r\n                color=\"orange\"\r\n                className=\"serving-count\"\r\n              >\r\n                {pending && (\r\n                  <div className=\"loading-background\">\r\n                    <div className=\"spinner\">\r\n                      <CircularProgress size={100} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <Line data={JSON.parse(JSON.stringify(weeklyCount))} />\r\n              </SimpleCard>\r\n            </Scrollbars>\r\n          </MemoGridBox>\r\n        </ChartContainer>\r\n      </ContentsBox>\r\n    </TitledContentsBox>\r\n  );\r\n};\r\n\r\nexport default WeeklyPage;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useCallback } from 'react';\r\n\r\nimport { RootState } from '@/redux';\r\nimport Statistics from '@/redux/Statistics';\r\nimport { WeeklyParam } from '@/redux/Statistics/reducer';\r\n\r\nexport default function useStatistics() {\r\n  const statistics = useSelector((state: RootState) => state.statistics);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchGetWeekly = useCallback(\r\n    (param: WeeklyParam) =>\r\n      dispatch(Statistics.actions.fetchGetWeeklyRequest(param)),\r\n    [dispatch]\r\n  );\r\n  return {\r\n    statistics,\r\n    fetchGetWeekly,\r\n  };\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSystem from '@/hooks/useSystem';\r\nimport TitledContentsBox from '@/components/organisms/TitledContentsBox';\r\nimport ShopSelector from '@/components/pages/popup/ShopSelectorPop';\r\n\r\nimport Button from '@/components/atoms/Button';\r\nimport Icon from '@/components/atoms/Icon';\r\nimport Modal from '@/components/atoms/Modal';\r\n\r\nconst GlobalPopupButton = () => {\r\n  const { setGobalPop } = useSystem();\r\n\r\n  return (\r\n    <Button type=\"button\" onClick={() => setGobalPop(true)}>\r\n      <Icon icon=\"store\" color=\"primary\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst ByDayPage = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <TitledContentsBox\r\n      title=\"요일별 서빙 통계\"\r\n      icon=\"bar_chart\"\r\n      titleChildren={<GlobalPopupButton />}\r\n    >\r\n      내용\r\n    </TitledContentsBox>\r\n  );\r\n};\r\n\r\nexport default ByDayPage;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useSystem from '@/hooks/useSystem';\r\nimport TitledContentsBox from '@/components/organisms/TitledContentsBox';\r\n\r\nimport Button from '@/components/atoms/Button';\r\nimport Icon from '@/components/atoms/Icon';\r\n\r\nconst GlobalPopupButton = () => {\r\n  const { setGobalPop } = useSystem();\r\n\r\n  return (\r\n    <Button type=\"button\" onClick={() => setGobalPop(true)}>\r\n      <Icon icon=\"store\" color=\"primary\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst ByTablePage = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <TitledContentsBox\r\n      title=\"테이블별 서빙 통계\"\r\n      icon=\"bar_chart\"\r\n      titleChildren={<GlobalPopupButton />}\r\n    >\r\n      내용\r\n    </TitledContentsBox>\r\n  );\r\n};\r\n\r\nexport default ByTablePage;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport RootPage from '@/components/pages/RootPage';\r\nimport WeeklyPage from '@/components/pages/statistics/WeeklyPage';\r\nimport ByDayPage from '@/components/pages/statistics/ByDayPage';\r\nimport ByTablePage from '@/components/pages/statistics/ByTablePage';\r\n\r\nexport default function Router() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <RootPage />\r\n      </Route>\r\n      <Route path=\"/statistics/weekly\">\r\n        <WeeklyPage />\r\n      </Route>\r\n      <Route path=\"/statistics/byday\">\r\n        <ByDayPage />\r\n      </Route>\r\n      <Route path=\"/statistics/bytable\">\r\n        <ByTablePage />\r\n      </Route>\r\n      <Route path=\"/task/list\">크롤링 작업 관리</Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst CssBaseline = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box; \r\n  }\r\n  html {\r\n    line-height: 1.15;\r\n    -webkit-text-size-adjust: 100%;\r\n    height:100%;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    font-family: \"Apple SD Gothic Neo\", \"Helvetica Neue\", \"Noto Sans KR\", sans-serif, Dotum, 돋움;\r\n    color: ${({ theme }) => theme.palette.typography};\r\n    height:100%;\r\n    &.scroll-locked {\r\n      overflow: hidden;\r\n    }\r\n  }\r\n  main {\r\n    display: block;\r\n  }\r\n  h1 {\r\n    font-size: 2em;\r\n    margin: 0.67em 0;\r\n  }\r\n  hr {\r\n    box-sizing: content-box;\r\n    height: 0;\r\n    overflow: visible;\r\n    margin: 0;\r\n    border: none;\r\n  }\r\n  pre {\r\n    font-family: monospace, monospace; \r\n    font-size: 1em; \r\n  }\r\n  a {\r\n    background-color: transparent;\r\n    text-decoration: none;\r\n    outline: none;\r\n    color: inherit;\r\n  }\r\n  p {\r\n    margin: 0;\r\n  }\r\n  ul {\r\n    margin: 0;\r\n  }\r\n  abbr[title] {\r\n    border-bottom: none; \r\n    text-decoration: underline; \r\n    text-decoration: underline dotted; \r\n  }\r\n\r\n  b,\r\n  strong {\r\n    font-weight: bolder;\r\n  }\r\n\r\n  code,\r\n  kbd,\r\n  samp {\r\n    font-family: monospace, monospace; \r\n    font-size: 1em; \r\n  }\r\n\r\n  small {\r\n    font-size: 80%;\r\n  }\r\n\r\n  sub,\r\n  sup {\r\n    font-size: 75%;\r\n    line-height: 0;\r\n    position: relative;\r\n    vertical-align: baseline;\r\n  }\r\n\r\n  sub {\r\n    bottom: -0.25em;\r\n  }\r\n\r\n  sup {\r\n    top: -0.5em;\r\n  }\r\n\r\n  img {\r\n    border-style: none;\r\n  }\r\n\r\n  button,\r\n  input,\r\n  optgroup,\r\n  select,\r\n  textarea {\r\n    font-family: inherit; \r\n    font-size: 100%; \r\n    line-height: 1.15; \r\n    margin: 0; \r\n  }\r\n\r\n  button,\r\n  input { \r\n    overflow: visible;\r\n  }\r\n\r\n  button,\r\n  select { \r\n    text-transform: none;\r\n  }\r\n\r\n  button,\r\n  [type=\"button\"],\r\n  [type=\"reset\"],\r\n  [type=\"submit\"] {\r\n    -webkit-appearance: button;\r\n  }\r\n\r\n  button::-moz-focus-inner,\r\n  [type=\"button\"]::-moz-focus-inner,\r\n  [type=\"reset\"]::-moz-focus-inner,\r\n  [type=\"submit\"]::-moz-focus-inner {\r\n    border-style: none;\r\n    padding: 0;\r\n  }\r\n\r\n  button:-moz-focusring,\r\n  [type=\"button\"]:-moz-focusring,\r\n  [type=\"reset\"]:-moz-focusring,\r\n  [type=\"submit\"]:-moz-focusring {\r\n    outline: 1px dotted ButtonText;\r\n  }\r\n\r\n  fieldset {\r\n    padding: 0.35em 0.75em 0.625em;\r\n  }\r\n\r\n  legend {\r\n    box-sizing: border-box; \r\n    color: inherit; \r\n    display: table; \r\n    max-width: 100%; \r\n    padding: 0; \r\n    white-space: normal; \r\n  }\r\n\r\n  progress {\r\n    vertical-align: baseline;\r\n  }\r\n\r\n  textarea {\r\n    overflow: auto;\r\n  }\r\n\r\n  [type=\"checkbox\"],\r\n  [type=\"radio\"] {\r\n    box-sizing: border-box; \r\n    padding: 0; \r\n  }\r\n\r\n  [type=\"number\"]::-webkit-inner-spin-button,\r\n  [type=\"number\"]::-webkit-outer-spin-button {\r\n    height: auto;\r\n  }\r\n\r\n  [type=\"search\"] {\r\n    -webkit-appearance: textfield; \r\n    outline-offset: -2px; \r\n  }\r\n\r\n  [type=\"search\"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-file-upload-button {\r\n    -webkit-appearance: button; \r\n    font: inherit; \r\n  }\r\n\r\n  details {\r\n    display: block;\r\n  }\r\n\r\n  summary {\r\n    display: list-item;\r\n  }\r\n\r\n  template {\r\n    display: none;\r\n  }\r\n\r\n  [hidden] {\r\n    display: none;\r\n  }\r\n  .root {\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 100%;\r\n      > div {\r\n          flex: 1; /* flex: 1 1 0 */\r\n          overflow: auto;\r\n      }\r\n  }\r\n`;\r\n\r\nexport default CssBaseline;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport List from '@/components/atoms/List';\r\nimport ListItem, { ListItemProps } from '@/components/atoms/ListItem';\r\nimport Icon from '@/components/atoms/Icon';\r\n\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\ntype MenuLinkItemProps = ListItemProps & {\r\n  to: string;\r\n  target?: '_blank' | '_self';\r\n  text: string;\r\n  icon: string;\r\n};\r\n\r\nexport type MenuListProps = {\r\n  items: MenuLinkItemProps[];\r\n};\r\n\r\nconst StyledList = styled(List)`\r\n  .menu-item {\r\n    color: ${({ theme }) => theme.palette.white.dark};\r\n    font-size: 14px;\r\n    letter-spacing: -0.5px;\r\n    margin: 6px 0;\r\n    padding: 10px 15px;\r\n    border-radius: 3px;\r\n    &.Mui-selected,\r\n    &.Mui-selected:hover {\r\n      background-color: ${({ theme }) => theme.palette.primary.main};\r\n    }\r\n  }\r\n  .menu-icon {\r\n    margin-right: 7px;\r\n  }\r\n`;\r\n\r\nconst MenuList = (props: MenuListProps) => {\r\n  const { items = [] } = props;\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const handleClick = (item: MenuLinkItemProps) => {\r\n    const { to, target = '_self' } = item;\r\n    if (location.pathname !== to) {\r\n      if (target === '_blank' && typeof globalThis.window !== 'undefined') {\r\n        window.open(to);\r\n      } else {\r\n        history.push(to);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledList>\r\n      {items.map((item) => {\r\n        const { to, children, text, icon } = item;\r\n        const { pathname } = location;\r\n        let selected = false;\r\n\r\n        if (to === '/') {\r\n          selected = pathname === to;\r\n        } else {\r\n          selected = pathname.includes(to);\r\n        }\r\n\r\n        return (\r\n          <ListItem\r\n            key={to}\r\n            ContainerComponent=\"div\"\r\n            selected={selected}\r\n            button\r\n            onClick={() => handleClick(item)}\r\n            className=\"menu-item\"\r\n          >\r\n            <Icon icon={icon} className=\"menu-icon\" />\r\n            {children || text}\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </StyledList>\r\n  );\r\n};\r\n\r\nexport default MenuList;\r\n","import React from 'react';\r\nimport Input, { InputProps } from '@/components/atoms/Input';\r\nimport Icon from '@/components/atoms/Icon';\r\n\r\nexport type IconLabeledInputProps = Omit<InputProps, 'color'> & {\r\n  icon?: string;\r\n  iconSize?: string;\r\n  label?: string;\r\n};\r\n\r\nconst IconLabeledInput = (props: IconLabeledInputProps) => {\r\n  const { icon = 'account_circle', iconSize } = props;\r\n\r\n  return (\r\n    <Input\r\n      {...props}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <Icon icon={icon} margin=\"0 10px 0 0\" iconSize={iconSize} />\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IconLabeledInput;\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable no-unused-expressions */\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { createAction, ActionType } from 'typesafe-actions';\r\nimport { put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { AxiosErrorHandler } from '@/helper';\r\nimport { Auth, LoginParam } from './reducer';\r\n\r\nconst FETCH_LOGIN_REQUEST = 'auth/FETCH_LOGIN_REQUEST';\r\nconst FETCH_LOGIN_SUCCESS = 'auth/FETCH_LOGIN_SUCCESS';\r\nconst FETCH_LOGIN_FAILURE = 'auth/FETCH_LOGIN_FAILURE';\r\n\r\nconst fetchLoginRequest = createAction(FETCH_LOGIN_REQUEST)<LoginParam>();\r\nconst fetchLoginSuccess = createAction(FETCH_LOGIN_SUCCESS)<Auth>();\r\nconst fetchLoginFailure = createAction(FETCH_LOGIN_FAILURE)();\r\n\r\nconst LOGOUT = 'auth/LOGOUT';\r\nconst LOGOUT_SUCCESS = 'auth/LOGOUT_SUCCESS';\r\n\r\nconst logout = createAction(LOGOUT)();\r\nconst logoutSuccess = createAction(LOGOUT_SUCCESS)();\r\n\r\nexport const actions = {\r\n  fetchLoginRequest,\r\n  fetchLoginSuccess,\r\n  fetchLoginFailure,\r\n  logout,\r\n  logoutSuccess,\r\n};\r\n\r\nexport type ActionsType = ActionType<typeof actions>;\r\n\r\n// redux-saga\r\nfunction* fetchLogin(action: ActionType<typeof fetchLoginRequest>) {\r\n  const { email, password } = action.payload;\r\n  const { data, status }: AxiosResponse<{ access_token: string }> = yield axios\r\n    .post<{ access_token: string }>(`/api/auth/login`, {\r\n      username: email,\r\n      password,\r\n    })\r\n    .catch(AxiosErrorHandler);\r\n\r\n  if (status === 201) {\r\n    axios.defaults.headers.Authorization = `Bearer ${data?.access_token}`;\r\n\r\n    if (globalThis?.window && data?.access_token) {\r\n      globalThis?.window.localStorage.setItem(\r\n        'access_token',\r\n        data?.access_token\r\n      );\r\n      globalThis?.window.localStorage.setItem(\r\n        'email',\r\n        action.payload.email || ''\r\n      );\r\n    }\r\n    yield put(\r\n      fetchLoginSuccess({\r\n        accessToken: data.access_token,\r\n        email,\r\n      })\r\n    );\r\n  } else {\r\n    yield put(fetchLoginFailure());\r\n  }\r\n}\r\n\r\nfunction* removeAuth() {\r\n  if (globalThis?.window) {\r\n    axios.defaults.headers.Authorization = '';\r\n    yield globalThis?.window.localStorage.removeItem('access_token');\r\n    yield globalThis?.window.localStorage.removeItem('email');\r\n    yield put(logoutSuccess());\r\n  }\r\n}\r\n\r\nexport default function* roleSaga() {\r\n  yield takeLatest(fetchLoginRequest, fetchLogin);\r\n  yield takeLatest(logout, removeAuth);\r\n}\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable func-names */\r\nimport produce, { Draft } from 'immer';\r\nimport { createReducer } from 'typesafe-actions';\r\n\r\nimport { ActionsType } from './actions';\r\n\r\nexport type Auth = {\r\n  accessToken?: string | null;\r\n  email?: string | null;\r\n};\r\n\r\nexport type LoginParam = {\r\n  email?: string;\r\n  password?: string;\r\n};\r\n\r\nexport type State = {\r\n  logged: Auth;\r\n};\r\n\r\nexport const initialState: State = {\r\n  logged: {\r\n    accessToken: globalThis.window.localStorage.getItem('access_token') || '',\r\n    email: globalThis.window.localStorage.getItem('email') || '',\r\n  },\r\n};\r\n\r\nexport default createReducer<State, ActionsType>(initialState, {\r\n  'auth/FETCH_LOGIN_SUCCESS': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.logged = action.payload;\r\n    });\r\n  },\r\n  'auth/LOGOUT_SUCCESS': function (state) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.logged = {};\r\n    });\r\n  },\r\n});\r\n","import saga, { actions } from './actions';\r\nimport reducer from './reducer';\r\n\r\nexport default {\r\n  saga,\r\n  reducer,\r\n  actions,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useCallback } from 'react';\r\n\r\nimport { RootState } from '@/redux';\r\nimport Auth from '@/redux/Auth';\r\n\r\nexport default function useAuth() {\r\n  const auth = useSelector((state: RootState) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchLogin = useCallback(\r\n    (param) => dispatch(Auth.actions.fetchLoginRequest(param)),\r\n    [dispatch]\r\n  );\r\n\r\n  const logout = useCallback(() => dispatch(Auth.actions.logout()), [dispatch]);\r\n\r\n  return {\r\n    auth,\r\n    fetchLogin,\r\n    logout,\r\n  };\r\n}\r\n","/* eslint-disable react/require-default-props */\r\nimport React, { memo, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Button from '@/components/atoms/Button';\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport IconLabeledInput from '@/components/molecules/IconLabeledInput';\r\nimport useAuth from '@/hooks/model/useAuth';\r\nimport { primary, typography, fontWeight, darkBackground } from '@/theme';\r\n\r\nconst MemoInput = memo(IconLabeledInput);\r\nconst MemoButton = memo(Button);\r\n\r\nconst StyledContainer = styled(GridBox)`\r\n  font-weight: ${fontWeight.thin};\r\n  .row-spacing {\r\n    margin: 3px;\r\n  }\r\n  .btn {\r\n    flex: 1 1 auto;\r\n    font-weight: ${fontWeight.thin};\r\n    margin-top: 7px;\r\n    &.btn-login {\r\n      margin-left: 3px;\r\n      color: ${primary.main};\r\n      border: 1px solid ${primary.main};\r\n    }\r\n    &.btn-join {\r\n      margin-right: 3px;\r\n      color: ${typography.lightWhite};\r\n      border: 1px solid ${typography.lightWhite};\r\n    }\r\n  }\r\n\r\n  input:-webkit-autofill,\r\n  input:-webkit-autofill:hover,\r\n  input:-webkit-autofill:focus,\r\n  input:-webkit-autofill:active {\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    -webkit-transition: background-color 9999s ease-out;\r\n    -webkit-box-shadow: 0 0 0px 30px ${darkBackground.paper} inset !important;\r\n    -webkit-text-fill-color: ${typography.white} !important;\r\n  }\r\n\r\n  .input-id {\r\n    label,\r\n    span,\r\n    input {\r\n      color: ${typography.white};\r\n      font-weight: ${fontWeight.thin};\r\n    }\r\n  }\r\n  .input-pw {\r\n    label,\r\n    span,\r\n    input {\r\n      color: ${typography.white};\r\n      font-weight: ${fontWeight.thin};\r\n    }\r\n  }\r\n`;\r\n\r\nconst LoginBox = () => {\r\n  const { fetchLogin } = useAuth();\r\n\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const inputUser = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { value, name } = e.target;\r\n\r\n    setUser({\r\n      ...user,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const login = () => {\r\n    fetchLogin(user);\r\n  };\r\n\r\n  return (\r\n    <StyledContainer container direction=\"column\">\r\n      <GridBox item className=\"row-spacing\">\r\n        <MemoInput\r\n          fullWidth\r\n          placeholder=\"Account ID\"\r\n          label=\"ID\"\r\n          icon=\"account_circle\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={inputUser}\r\n          value={user.email}\r\n          className=\"input-id\"\r\n          autoComplete=\"email\"\r\n        />\r\n      </GridBox>\r\n      <GridBox item className=\"row-spacing\">\r\n        <MemoInput\r\n          fullWidth\r\n          placeholder=\"Password\"\r\n          label=\"PW\"\r\n          icon=\"vpn_key\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={inputUser}\r\n          className=\"input-pw\"\r\n          autoComplete=\"password\"\r\n        />\r\n      </GridBox>\r\n      <GridBox item className=\"row-spacing\">\r\n        <GridBox container justify=\"space-around\">\r\n          <MemoButton className=\"btn btn-join\" variant=\"outlined\">\r\n            Join\r\n          </MemoButton>\r\n          <MemoButton\r\n            className=\"btn btn-login\"\r\n            variant=\"outlined\"\r\n            onClick={login}\r\n          >\r\n            Login\r\n          </MemoButton>\r\n        </GridBox>\r\n      </GridBox>\r\n    </StyledContainer>\r\n  );\r\n};\r\nexport default LoginBox;\r\n","/* eslint-disable react/require-default-props */\r\nimport React, { memo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Button from '@/components/atoms/Button';\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport useAuth from '@/hooks/model/useAuth';\r\nimport { primary, typography, fontWeight } from '@/theme';\r\nimport IconButton from '@/components/molecules/IconButton';\r\n\r\nconst MemoButton = memo(Button);\r\n\r\nconst StyledContainer = styled(GridBox)`\r\n  .email {\r\n    color: ${primary.main};\r\n  }\r\n  .greet {\r\n    color: ${typography.lightWhite};\r\n    text-align: center;\r\n  }\r\n  .row-spacing {\r\n    margin: 3px;\r\n  }\r\n  .btn {\r\n    flex: 1 1 auto;\r\n    font-weight: ${fontWeight.thin};\r\n    margin-top: 7px;\r\n    &.btn-logout {\r\n      color: ${primary.main};\r\n      border: 1px solid ${primary.main};\r\n      margin-left: 3px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LogoutBox = () => {\r\n  const { auth, logout } = useAuth();\r\n\r\n  return (\r\n    <StyledContainer container direction=\"column\">\r\n      <GridBox item className=\"row-spacing\">\r\n        <IconButton icon=\"account_circle\" className=\"email\" fullWidth>\r\n          {auth.logged?.email}\r\n        </IconButton>\r\n        <p className=\"greet\">님 환영합니다</p>\r\n      </GridBox>\r\n      <GridBox item className=\"row-spacing\" />\r\n      <GridBox item className=\"row-spacing\">\r\n        <GridBox container justify=\"flex-end\">\r\n          <MemoButton\r\n            className=\"btn btn-logout\"\r\n            variant=\"text\"\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </MemoButton>\r\n        </GridBox>\r\n      </GridBox>\r\n    </StyledContainer>\r\n  );\r\n};\r\nexport default LogoutBox;\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ServerMessenger from '@/components/molecules/ServerMessenger';\r\nimport MenuList, { MenuListProps } from '@/components/molecules/MenuList';\r\nimport Button from '@/components/atoms/Button';\r\nimport LoginBox from '@/components/organisms/LoginBox';\r\nimport LogoutBox from '@/components/organisms/LogoutBox';\r\nimport useAuth from '@/hooks/model/useAuth';\r\n\r\nimport { darkBackground, typography } from '@/theme';\r\n\r\nconst HeaderWrap = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n\r\n  background-color: ${darkBackground.transparent};\r\n  .logo-sec {\r\n    padding: 15px 15px;\r\n    .logo {\r\n      font-size: 18px;\r\n      color: #fff;\r\n      letter-spacing: -0.5px;\r\n    }\r\n  }\r\n  .messenger-sec {\r\n    padding: 10px 30px;\r\n  }\r\n  .log-sec {\r\n    padding: 15px 20px;\r\n  }\r\n  .menu-sec {\r\n    padding: 15px 15px;\r\n  }\r\n  .bot-sec {\r\n    margin-top: auto;\r\n    padding: 15px 15px;\r\n    text-align: center;\r\n    color: ${typography.white};\r\n  }\r\n  .hr {\r\n    background: rgba(180, 180, 180, 0.3);\r\n    height: 1px;\r\n    margin: 0 15px;\r\n  }\r\n`;\r\n\r\nconst items: MenuListProps['items'] = [\r\n  {\r\n    to: '/statistics/weekly',\r\n    text: '주차별 서빙 통계',\r\n    icon: 'bar_chart',\r\n  },\r\n  {\r\n    to: '/statistics/byday',\r\n    text: '요일별 서빙 통계',\r\n    icon: 'timeline',\r\n  },\r\n  {\r\n    to: '/statistics/bytable',\r\n    text: '테이블별 서빙 통계',\r\n    icon: 'trending_up',\r\n  },\r\n  {\r\n    to: '/task/list',\r\n    text: '크롤링 작업 관리',\r\n    icon: 'schedule',\r\n  },\r\n];\r\n\r\nconst SideHeader = () => {\r\n  const { auth } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const goHome = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <HeaderWrap>\r\n      <div className=\"logo-sec\">\r\n        <Button className=\"logo\" variant=\"text\" fullWidth onClick={goHome}>\r\n          서빙로봇 대시보드\r\n        </Button>\r\n      </div>\r\n      <hr className=\"hr\" />\r\n      <div className=\"log-sec\">\r\n        {auth.logged.accessToken ? <LogoutBox /> : <LoginBox />}\r\n      </div>\r\n      <hr className=\"hr\" />\r\n      <div className=\"menu-sec\">\r\n        <MenuList items={items} />\r\n      </div>\r\n      <hr className=\"hr\" />\r\n      <div className=\"messenger-sec\">\r\n        <ServerMessenger />\r\n      </div>\r\n      <div className=\"bot-sec\">\r\n        <span>copyright</span>\r\n      </div>\r\n    </HeaderWrap>\r\n  );\r\n};\r\n\r\nexport default SideHeader;\r\n","import React, { ReactNode, memo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport CssBaseline from '@/components/atoms/CssBaseline';\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport SideHeader from '@/components/organisms/SideHeader';\r\n\r\nconst StyledContainer = styled(GridBox)`\r\n  flex-wrap: nowrap;\r\n  width: 100%;\r\n  height: 100%;\r\n  .left-side {\r\n    flex: 0 0 260px;\r\n    padding: 0px;\r\n    box-shadow: 0 10px 30px -12px rgba(0, 0, 0, 0.42),\r\n      0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\r\n  }\r\n  .contents {\r\n    flex: 1 1 0;\r\n  }\r\n`;\r\n\r\nexport type LeftMenuTemplateProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst MemoSideHeader = memo(SideHeader);\r\n\r\nconst LeftMenuTemplate = (props: LeftMenuTemplateProps) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <StyledContainer container>\r\n        <GridBox item className=\"left-side\">\r\n          <MemoSideHeader />\r\n        </GridBox>\r\n        <GridBox item className=\"contents\">\r\n          {children}\r\n        </GridBox>\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n};\r\nexport default LeftMenuTemplate;\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Modal from '@/components/atoms/Modal';\r\nimport Button from '@/components/atoms/Button';\r\nimport useSystem from '@/hooks/useSystem';\r\n\r\nimport { background } from '@/theme';\r\n\r\nexport type SystemAlertProps = {\r\n  textAlign?: 'left' | 'right' | 'center';\r\n};\r\n\r\nconst StyledModalContents = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 300px;\r\n  background-color: ${background.paper};\r\n  padding: 20px;\r\n  .message {\r\n    font-size: 18px;\r\n  }\r\n  .button-wrap {\r\n    margin-top: 10px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst SystemAlert: FC<SystemAlertProps> = (props) => {\r\n  const { system, hideAlert } = useSystem();\r\n  const { textAlign = 'center' } = props;\r\n\r\n  const clickHandler = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    if (typeof system.callback === 'function') {\r\n      console.log('실행');\r\n      system.callback(e);\r\n    }\r\n    hideAlert();\r\n  };\r\n\r\n  return (\r\n    <Modal open={system.isDisplayAlert || false}>\r\n      <StyledModalContents>\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            textAlign,\r\n          }}\r\n        >\r\n          {system.message}\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <Button onClick={clickHandler} variant=\"outlined\">\r\n            확인\r\n          </Button>\r\n        </div>\r\n      </StyledModalContents>\r\n    </Modal>\r\n  );\r\n};\r\nexport default SystemAlert;\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Modal from '@/components/atoms/Modal';\r\nimport Button from '@/components/atoms/Button';\r\nimport useSystem from '@/hooks/useSystem';\r\n\r\nimport { background } from '@/theme';\r\n\r\nexport type SystemConfirmProps = {\r\n  textAlign?: 'left' | 'right' | 'center';\r\n};\r\n\r\nconst StyledModalContents = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 300px;\r\n  background-color: ${background.paper};\r\n  padding: 20px;\r\n  .message {\r\n    font-size: 18px;\r\n  }\r\n  .button-wrap {\r\n    margin-top: 10px;\r\n    text-align: center;\r\n    .message-btn {\r\n      margin-left: 5px;\r\n      &:first-child {\r\n        margin-left: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SystemConfirm: FC<SystemConfirmProps> = (props) => {\r\n  const { system, hideConfirm } = useSystem();\r\n  const { textAlign = 'center' } = props;\r\n\r\n  const cancelHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    if (typeof system.cancelCallback === 'function') {\r\n      system.cancelCallback(e);\r\n    }\r\n    hideConfirm();\r\n  };\r\n\r\n  const confirmHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    if (typeof system.callback === 'function') {\r\n      system.callback(e);\r\n    }\r\n    hideConfirm();\r\n  };\r\n\r\n  return (\r\n    <Modal open={system.isDisplayConfirm || false}>\r\n      <StyledModalContents>\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            textAlign,\r\n          }}\r\n        >\r\n          {system.message}\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <Button\r\n            className=\"message-btn\"\r\n            onClick={cancelHandler}\r\n            variant=\"outlined\"\r\n          >\r\n            취소\r\n          </Button>\r\n          <Button\r\n            className=\"message-btn\"\r\n            onClick={confirmHandler}\r\n            variant=\"outlined\"\r\n          >\r\n            확인\r\n          </Button>\r\n        </div>\r\n      </StyledModalContents>\r\n    </Modal>\r\n  );\r\n};\r\nexport default SystemConfirm;\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport OriginInputLabel, {\r\n  InputLabelProps as OriginInputLabelProps,\r\n} from '@material-ui/core/InputLabel';\r\n\r\nexport type LabelProps = Omit<OriginInputLabelProps, 'multiline'>;\r\nconst StyledLabel = styled(OriginInputLabel)<LabelProps>`\r\n  color: ${({ theme }) => theme.palette.typography};\r\n  /* box-shadow: 0 4px 6px rgba(10, 10, 12, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08); */\r\n  &:hover {\r\n    color: ${({ theme }) => theme.palette.hover};\r\n  }\r\n`;\r\n\r\nconst Label = (props: LabelProps) => {\r\n  const { children } = props;\r\n\r\n  return <StyledLabel {...props}>{children}</StyledLabel>;\r\n};\r\n\r\nexport default Label;\r\n","import React, { FC, memo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport classNames from 'classnames';\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport Button from '@/components/atoms/Button';\r\nimport IconButton from '@/components/molecules/IconButton';\r\n\r\nimport { primary, typography, fontWeight } from '@/theme';\r\n\r\nexport type ButtonBoxProps = {\r\n  confirmCallback?: (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => void;\r\n  cancleCallback?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n  addClickCallback?: (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => void;\r\n  backClickCallback?: (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => void;\r\n  deleteClickCallback?: (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => void;\r\n  modifyClickCallback?: (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => void;\r\n  confirmMode?: boolean;\r\n  showcase: 'list' | 'write' | 'detail';\r\n};\r\n\r\nconst StyledBox = styled(GridBox)`\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n\r\n  .btn {\r\n    flex: 1 1 auto;\r\n    font-weight: ${fontWeight.thin};\r\n    width: 120px;\r\n    color: ${typography.white};\r\n    border: 1px solid ${typography.light};\r\n    background-color: ${typography.light};\r\n    margin-left: 8px;\r\n    &.btn-primary {\r\n      border: 1px solid ${primary.main};\r\n      background-color: ${primary.main};\r\n    }\r\n    &.btn-default {\r\n      background-color: ${typography.light};\r\n      border: 1px solid ${typography.light};\r\n    }\r\n  }\r\n\r\n  .confirm-sec {\r\n    display: none;\r\n  }\r\n\r\n  &.confirmMode {\r\n    .btns-sec {\r\n      display: none;\r\n    }\r\n    .confirm-sec {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MemoIconButton = memo(IconButton);\r\nconst MemoButton = memo(Button);\r\n\r\nconst ButtonBox: FC<ButtonBoxProps> = (props) => {\r\n  const {\r\n    confirmCallback,\r\n    addClickCallback,\r\n    backClickCallback,\r\n    deleteClickCallback,\r\n    cancleCallback,\r\n    modifyClickCallback,\r\n    confirmMode,\r\n    showcase = 'list',\r\n  } = props;\r\n\r\n  return (\r\n    <StyledBox\r\n      container\r\n      justify=\"flex-end\"\r\n      className={classNames({ confirmMode })}\r\n    >\r\n      <GridBox item className=\"btns-sec\">\r\n        <MemoIconButton\r\n          className=\"btn\"\r\n          onClick={backClickCallback}\r\n          icon=\"arrow_back\"\r\n          title=\"뒤로\"\r\n          style={{ display: showcase !== 'list' ? 'index-flex' : 'none' }}\r\n        >\r\n          뒤로\r\n        </MemoIconButton>\r\n        <MemoIconButton\r\n          className=\"btn btn-primary\"\r\n          onClick={deleteClickCallback}\r\n          icon=\"delete\"\r\n          title=\"삭제\"\r\n        >\r\n          삭제\r\n        </MemoIconButton>\r\n        <MemoIconButton\r\n          className=\"btn btn-primary\"\r\n          onClick={modifyClickCallback}\r\n          icon=\"save\"\r\n          title=\"수정\"\r\n          style={{\r\n            display: showcase === 'detail' ? 'index-flex' : 'none',\r\n          }}\r\n        >\r\n          수정\r\n        </MemoIconButton>\r\n        <MemoIconButton\r\n          className=\"btn btn-primary\"\r\n          onClick={addClickCallback}\r\n          icon=\"add\"\r\n          title=\"등록\"\r\n          style={{\r\n            display:\r\n              showcase === 'write' || showcase === 'list'\r\n                ? 'index-flex'\r\n                : 'none',\r\n          }}\r\n        >\r\n          등록\r\n        </MemoIconButton>\r\n      </GridBox>\r\n      <GridBox item className=\"confirm-sec\">\r\n        <MemoButton className=\"btn btn-default\" onClick={cancleCallback}>\r\n          취소\r\n        </MemoButton>\r\n        <MemoButton className=\"btn btn-primary\" onClick={confirmCallback}>\r\n          확인\r\n        </MemoButton>\r\n      </GridBox>\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport default ButtonBox;\r\n","import React, { FC, memo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport Button, { ButtonProps } from '@/components/atoms/Button';\r\nimport Icon from '@/components/atoms/Icon';\r\nimport ButtonBox, { ButtonBoxProps } from '@/components/molecules/ButtonBox';\r\n\r\nimport TitledContentsBox, {\r\n  TitledContentsBoxProps,\r\n} from '@/components/organisms/TitledContentsBox';\r\n\r\nimport { background } from '@/theme';\r\n\r\nexport type ModalTemplateProps = Pick<\r\n  TitledContentsBoxProps,\r\n  'title' | 'icon'\r\n> & {\r\n  onClose?: ButtonProps['onClick'];\r\n  onSubmit?: ButtonBoxProps['confirmCallback'];\r\n  onCancel?: ButtonBoxProps['cancleCallback'];\r\n};\r\n\r\nconst StyledModalBody = styled(GridBox)`\r\n  position: absolute;\r\n  width: 80%;\r\n  height: 90%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: ${background.paper};\r\n`;\r\n\r\nconst CloseWrap: FC<ButtonProps> = (props) => {\r\n  const { onClick } = props;\r\n\r\n  return (\r\n    <Button type=\"button\" onClick={onClick}>\r\n      <Icon icon=\"close\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst MemoButtonBox = memo(ButtonBox);\r\n\r\nconst ModalTemplate: FC<ModalTemplateProps> = (props) => {\r\n  const { children, title, icon, onClose, onSubmit, onCancel } = props;\r\n\r\n  return (\r\n    <StyledModalBody>\r\n      <TitledContentsBox\r\n        title={title}\r\n        icon={icon}\r\n        topPadd=\"10px 20px\"\r\n        conPadd=\"20px\"\r\n        titleChildren={<CloseWrap onClick={onClose} />}\r\n        bottomChildren={\r\n          <MemoButtonBox\r\n            showcase=\"list\"\r\n            confirmCallback={onSubmit}\r\n            cancleCallback={onCancel}\r\n            confirmMode\r\n          />\r\n        }\r\n      >\r\n        {children}\r\n      </TitledContentsBox>\r\n    </StyledModalBody>\r\n  );\r\n};\r\n\r\nexport default ModalTemplate;\r\n","/* eslint-disable react/require-default-props */\r\nimport React, { useCallback, useState, memo, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { debounce } from 'throttle-debounce';\r\nimport classNames from 'classnames';\r\n\r\nimport useSystem from '@/hooks/useSystem';\r\nimport useShop from '@/hooks/model/useShop';\r\nimport { Shop } from '@/redux/Shop/reducer';\r\n\r\nimport List from '@/components/atoms/List';\r\nimport ListItem from '@/components/atoms/ListItem';\r\nimport Label from '@/components/atoms/Label';\r\nimport Checkbox from '@/components/atoms/Checkbox';\r\nimport GridBox from '@/components/atoms/GridBox';\r\nimport SearchBar from '@/components/molecules/SearchBar';\r\nimport SimpleCard from '@/components/molecules/SimpleCard';\r\n\r\nimport PopupTemplate from '@/components/template/PopupTemplate';\r\n\r\nconst MemoList = memo(List);\r\nconst MemoListItem = memo(ListItem);\r\nconst MemoCheckbox = memo(Checkbox);\r\nconst MemoGridBox = memo(GridBox);\r\nconst MemoScrollbars = memo(Scrollbars);\r\n\r\nconst StyleGlobalPop = styled.div<{ show: boolean }>`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: ${({ show }) => (show ? 'block' : 'none')};\r\n  background: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst StyledContainer = styled(GridBox)`\r\n  height: 100%;\r\n  .none {\r\n    display: none;\r\n  }\r\n  .search-sec {\r\n    flex: 0 0 auto;\r\n  }\r\n  .contents-sec {\r\n    flex: 1 1 0;\r\n    margin-top: 10px;\r\n    .checklist-wrap {\r\n      height: 100%;\r\n      .all-check {\r\n        flex: 0 0 auto;\r\n      }\r\n      .store-list {\r\n        flex: 1 1 0;\r\n      }\r\n      .all-checkbox-label {\r\n        display: inline-block;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .store-chip {\r\n      margin: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport type ShopSelectorProps = {\r\n  closeHandler?: () => void;\r\n};\r\n\r\nconst ShopSelector = () => {\r\n  const { system, setGobalPop } = useSystem();\r\n  const { store, setSelectedShop } = useShop();\r\n  const { items, selected } = store;\r\n  const [searchVal, setSearchVal] = useState<string>('');\r\n  const [localSelected, setLocalSelected] = useState<number[]>(\r\n    selected.map(({ id }) => id)\r\n  );\r\n\r\n  const debounceSetValue = debounce(300, false, (value: string) => {\r\n    setSearchVal(value.trim());\r\n  });\r\n\r\n  const onChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    debounceSetValue(e.target.value);\r\n  };\r\n\r\n  const checkAll = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    checked: boolean\r\n  ) => {\r\n    if (checked) {\r\n      setLocalSelected(items.map(({ id }) => id));\r\n    } else {\r\n      setLocalSelected([]);\r\n    }\r\n  };\r\n\r\n  const onClick = useCallback(\r\n    (id: number) => {\r\n      const existing = localSelected.includes(id);\r\n\r\n      if (existing) {\r\n        setLocalSelected(\r\n          localSelected.filter((selectedId) => selectedId !== id)\r\n        );\r\n      } else {\r\n        setLocalSelected([...localSelected, id]);\r\n      }\r\n    },\r\n    [localSelected]\r\n  );\r\n\r\n  const onCancel = () => {\r\n    setLocalSelected(selected.map(({ id }) => id));\r\n    setGobalPop(false);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setLocalSelected(selected.map(({ id }) => id));\r\n    setGobalPop(false);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    setSelectedShop(items.filter(({ id }) => localSelected.includes(id)));\r\n    setGobalPop(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLocalSelected(selected.map(({ id }) => id));\r\n  }, [selected]);\r\n\r\n  return (\r\n    <StyleGlobalPop show={system.globalPop}>\r\n      <PopupTemplate\r\n        title=\"상점 선택\"\r\n        icon=\"store\"\r\n        onCancel={onCancel}\r\n        onClose={onClose}\r\n        onSubmit={onSubmit}\r\n      >\r\n        <StyledContainer container wrap=\"nowrap\" direction=\"column\">\r\n          <MemoGridBox item className=\"search-sec\">\r\n            <SearchBar onChange={onChange} />\r\n          </MemoGridBox>\r\n          <MemoGridBox item className=\"contents-sec\">\r\n            <SimpleCard title=\"상점목록\" color=\"orange\">\r\n              <MemoGridBox\r\n                container\r\n                direction=\"column\"\r\n                wrap=\"nowrap\"\r\n                className=\"checklist-wrap\"\r\n              >\r\n                <MemoGridBox item className=\"all-check\">\r\n                  <MemoCheckbox\r\n                    checked={items.length === localSelected.length}\r\n                    id=\"all_stores\"\r\n                    onChange={checkAll}\r\n                  />\r\n                  <Label className=\"all-checkbox-label\" htmlFor=\"all_stores\">\r\n                    모든 상점 ({items.length}개)\r\n                  </Label>\r\n                </MemoGridBox>\r\n                <MemoGridBox item className=\"store-list\">\r\n                  <MemoScrollbars className=\"custom-scrollbar\">\r\n                    <MemoList>\r\n                      {items.map((item) => {\r\n                        const { name, id } = item;\r\n                        const reg = new RegExp(searchVal, 'igm');\r\n\r\n                        return (\r\n                          <MemoListItem\r\n                            key={id}\r\n                            button\r\n                            onClick={() => onClick(id)}\r\n                            className={classNames({\r\n                              none: !name.trim().match(reg),\r\n                            })}\r\n                          >\r\n                            <MemoCheckbox\r\n                              checked={localSelected.includes(id)}\r\n                            />\r\n                            {name}\r\n                          </MemoListItem>\r\n                        );\r\n                      })}\r\n                    </MemoList>\r\n                  </MemoScrollbars>\r\n                </MemoGridBox>\r\n              </MemoGridBox>\r\n            </SimpleCard>\r\n          </MemoGridBox>\r\n        </StyledContainer>\r\n      </PopupTemplate>\r\n    </StyleGlobalPop>\r\n  );\r\n};\r\n\r\nexport default ShopSelector;\r\n","import React, { useEffect } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { ThemeProvider as MaterialThemeProvider } from '@material-ui/core/styles';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\n\r\nimport Router from '@/router';\r\nimport { defaultTheme, materialTheme } from '@/theme';\r\n\r\nimport LeftMenuTemplate from '@/components/template/LeftMenuTemplate';\r\nimport SystemAlert from '@/components/molecules/SystemAlert';\r\nimport SystemConfirm from '@/components/molecules/SystemConfirm';\r\nimport ShopSelector from '@/components/pages/popup/ShopSelectorPop';\r\n\r\nimport useShop from '@/hooks/model/useShop';\r\nimport useAuth from './hooks/model/useAuth';\r\n\r\nconst App = () => {\r\n  const { auth } = useAuth();\r\n  const { store, fetchGetShop, setSelectedShop } = useShop(); // 전역에서 사용할 상점리스트를 App.tsx에서 미리 불러둠.\r\n  const { items } = store; // store가 아니라 상점입니다(?)\r\n\r\n  useEffect(() => {\r\n    fetchGetShop({\r\n      limit: 100000,\r\n      page: 1,\r\n    });\r\n  }, [fetchGetShop, auth]);\r\n\r\n  useEffect(() => {\r\n    setSelectedShop(items);\r\n  }, [items, setSelectedShop]);\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <MaterialThemeProvider theme={materialTheme}>\r\n          <BrowserRouter>\r\n            <LeftMenuTemplate>\r\n              <Router />\r\n            </LeftMenuTemplate>\r\n          </BrowserRouter>\r\n          <SystemAlert />\r\n          <SystemConfirm />\r\n          <ShopSelector />\r\n        </MaterialThemeProvider>\r\n      </ThemeProvider>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","/* eslint-disable func-names */\r\nimport { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\n\r\nimport auth from '@/redux/Auth';\r\nimport system from '@/redux/System';\r\nimport store from '@/redux/Shop';\r\nimport message from '@/redux/Message';\r\nimport filter from '@/redux/Filter';\r\nimport statistics from '@/redux/Statistics';\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: auth.reducer,\r\n  store: store.reducer,\r\n  system: system.reducer,\r\n  message: message.reducer,\r\n  filter: filter.reducer,\r\n  statistics: statistics.reducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport const rootSaga = function* () {\r\n  yield all([\r\n    auth.saga(),\r\n    store.saga(),\r\n    system.saga(),\r\n    message.saga(),\r\n    filter.saga(),\r\n    statistics.saga(),\r\n  ]);\r\n};\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable operator-linebreak */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nimport App from '@/App';\r\nimport { rootReducer, rootSaga } from '@/redux';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:8080';\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\naxios.defaults.headers.put['Access-Control-Allow-Origin'] = '*';\r\naxios.defaults.headers.Authorization =\r\n  `Bearer ${globalThis.window.localStorage.getItem('access_token')}` || '';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button, { ButtonProps } from '@material-ui/core/Button';\r\nimport Icon from '@/components/atoms/Icon';\r\n\r\nexport type IconButtonProps = Omit<ButtonProps, 'startIcon' | 'endIcon'> & {\r\n  icon: string;\r\n  iconPlace?: 'left' | 'right' | 'both';\r\n  iconColor?: string;\r\n  iconSize?: string;\r\n};\r\n\r\nconst StyledIconButton = styled(Button)`\r\n  color: ${({ theme }) => theme.palette.typography};\r\n  min-width: 40px !important;\r\n`;\r\n\r\nconst IconButton = (props: IconButtonProps) => {\r\n  const {\r\n    children,\r\n    icon,\r\n    color,\r\n    iconColor,\r\n    iconSize,\r\n    disabled,\r\n    iconPlace = 'left',\r\n  } = props;\r\n  return (\r\n    <StyledIconButton\r\n      {...props}\r\n      startIcon={\r\n        iconPlace !== 'right' && (\r\n          <Icon\r\n            icon={icon}\r\n            iconSize={iconSize}\r\n            color={disabled ? 'disabled' : color}\r\n            iconColor={disabled ? 'disabled' : iconColor}\r\n          />\r\n        )\r\n      }\r\n      endIcon={\r\n        iconPlace !== 'left' && (\r\n          <Icon\r\n            icon={icon}\r\n            color={disabled ? 'disabled' : color}\r\n            iconColor={disabled ? 'disabled' : iconColor}\r\n          />\r\n        )\r\n      }\r\n    >\r\n      {children}\r\n    </StyledIconButton>\r\n  );\r\n};\r\nexport default IconButton;\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-unused-expressions */\r\nimport { createAction, ActionType } from 'typesafe-actions';\r\n\r\nimport { State } from './reducer';\r\n\r\nconst SET_MESSAGE = 'message/SET_MESSAGE';\r\n\r\nconst setMessage = createAction(SET_MESSAGE)<State>();\r\n\r\nexport const actions = {\r\n  setMessage,\r\n};\r\n\r\nexport type ActionsType = ActionType<typeof actions>;\r\n\r\nexport default function* roleSaga() {}\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable func-names */\r\nimport produce, { Draft } from 'immer';\r\nimport { createReducer } from 'typesafe-actions';\r\n\r\nimport { ActionsType } from './actions';\r\n\r\nexport type State = {\r\n  taskingId: string | null;\r\n  taskingTime: string | null;\r\n  runningTime: number;\r\n};\r\n\r\nexport const initialState: State = {\r\n  taskingId: null,\r\n  taskingTime: null,\r\n  runningTime: 0,\r\n};\r\n\r\nexport default createReducer<State, ActionsType>(initialState, {\r\n  'message/SET_MESSAGE': function (state, action) {\r\n    return produce(state, (draft: Draft<State>) => {\r\n      draft.taskingId = action.payload.taskingId;\r\n      draft.taskingTime = action.payload.taskingTime;\r\n      draft.runningTime = action.payload.runningTime;\r\n    });\r\n  },\r\n});\r\n","import saga, { actions } from './actions';\r\nimport reducer from './reducer';\r\n\r\nexport default {\r\n  saga,\r\n  reducer,\r\n  actions,\r\n};\r\n"],"sourceRoot":""}